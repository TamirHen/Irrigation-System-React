{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/Tabs/Manual.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable import/no-named-as-default */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-console */\n\n/* eslint-disable no-unused-expressions */\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Timer, { useTimer } from 'react-compound-timer';\nimport formatTimeUnit from '../utils/FormatTimeUnit';\nimport './Manual.css';\n\nfunction Manual(props) {\n  _s();\n\n  const [textButton, setTextButton] = useState('START');\n  const [minutes, setMinutes] = useState(0);\n  const [loading, setLoading] = useState('determinate');\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(false);\n  const {\n    value,\n    controls: {\n      setTime,\n      start,\n      stop\n    }\n  } = useTimer({\n    initialTime: 0,\n    direction: 'backward',\n    startImmediately: false,\n    // formatValue: (val) => `${val < 10 ? `0${val}` : val}`,\n    lastUnit: 'h',\n    timeToUpdate: 1000\n  }); //   useEffect(() => {\n  //     setTime(minutes);\n  //   }, [minutes]);\n\n  const {\n    user\n  } = props;\n\n  const startTimer = () => {\n    setTime(minutes * 60 * 1000); // {\n    //   initialTime: minutes * 60 * 1000,\n    // direction: 'backward',\n    //   startImmediately: true,\n    // formatValue: (val) => `${val < 10 ? `0${val}` : val}`,\n    // lastUnit: 'h',\n    // timeToUpdate: 1000,\n    // }\n  };\n\n  const clickButton = event => {\n    event.preventDefault();\n    setLoading('indeterminate');\n    setIsSubmitDisabled(true);\n\n    if (textButton === 'START') {\n      axios.post(`${user.data().dataplicity}/stop_irrigate`) // `${user.data().dataplicity}/irrigate_by_minutes/${minutes}`)\n      .then(() => {\n        setTextButton('STOP');\n        console.log('irrigation started');\n        startTimer();\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        setLoading('determinate');\n        setIsSubmitDisabled(false);\n      });\n    } else {\n      axios.post(`${user.data().dataplicity}/stop_irrigate`).then(() => {\n        setTextButton('START');\n        console.log('irrigation stopped');\n      }).catch(error => {\n        console.log(error);\n        console.log(\"IRRIGATION DIDN'T STOPPTED!!!\");\n      }).finally(() => {\n        setLoading('determinate');\n        setIsSubmitDisabled(false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"manual-irrigation-form\",\n    onSubmit: clickButton,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"minutes-input-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"number\",\n        id: \"minutes-input\",\n        label: \"Minutes\",\n        variant: \"outlined\",\n        value: minutes,\n        required: true,\n        onChange: event => {\n          setMinutes(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"breathing-button-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        id: \"breathing-button\",\n        className: \"manual-button\",\n        variant: \"contained\",\n        color: textButton === 'START' ? 'primary' : 'secondary',\n        type: \"submit\",\n        disabled: isSubmitDisabled //   onClick={textButton === 'START' ? start : stop}\n        ,\n        children: textButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-wrapper\",\n      hidden: textButton === 'START',\n      children: [formatTimeUnit(value.h), \":\", formatTimeUnit(value.m), \":\", formatTimeUnit(value.s)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        className: \"loader\",\n        variant: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Manual, \"AD9IRP4u7cfkInUbduciybcAxa8=\", false, function () {\n  return [useTimer];\n});\n\n_c = Manual;\nexport default Manual;\n\nvar _c;\n\n$RefreshReg$(_c, \"Manual\");","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/Tabs/Manual.js"],"names":["React","useState","useEffect","TextField","Button","axios","CircularProgress","Timer","useTimer","formatTimeUnit","Manual","props","textButton","setTextButton","minutes","setMinutes","loading","setLoading","isSubmitDisabled","setIsSubmitDisabled","value","controls","setTime","start","stop","initialTime","direction","startImmediately","lastUnit","timeToUpdate","user","startTimer","clickButton","event","preventDefault","post","data","dataplicity","then","console","log","catch","error","finally","target","h","m","s"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-named-as-default */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\n/* eslint-disable no-unused-expressions */\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Timer, { useTimer } from 'react-compound-timer';\nimport formatTimeUnit from '../utils/FormatTimeUnit';\n\nimport './Manual.css';\n\nfunction Manual(props) {\n  const [textButton, setTextButton] = useState('START');\n  const [minutes, setMinutes] = useState(0);\n  const [loading, setLoading] = useState('determinate');\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(false);\n  const {\n    value,\n    controls: { setTime, start, stop },\n  } = useTimer({\n    initialTime: 0,\n    direction: 'backward',\n    startImmediately: false,\n    // formatValue: (val) => `${val < 10 ? `0${val}` : val}`,\n    lastUnit: 'h',\n    timeToUpdate: 1000,\n  });\n\n  //   useEffect(() => {\n  //     setTime(minutes);\n  //   }, [minutes]);\n\n  const { user } = props;\n\n  const startTimer = () => {\n    setTime(minutes * 60 * 1000);\n    // {\n    //   initialTime: minutes * 60 * 1000,\n    // direction: 'backward',\n    //   startImmediately: true,\n    // formatValue: (val) => `${val < 10 ? `0${val}` : val}`,\n    // lastUnit: 'h',\n    // timeToUpdate: 1000,\n    // }\n  };\n\n  const clickButton = (event) => {\n    event.preventDefault();\n    setLoading('indeterminate');\n    setIsSubmitDisabled(true);\n    if (textButton === 'START') {\n      axios\n        .post(`${user.data().dataplicity}/stop_irrigate`) // `${user.data().dataplicity}/irrigate_by_minutes/${minutes}`)\n        .then(() => {\n          setTextButton('STOP');\n          console.log('irrigation started');\n          startTimer();\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading('determinate');\n          setIsSubmitDisabled(false);\n        });\n    } else {\n      axios\n        .post(`${user.data().dataplicity}/stop_irrigate`)\n        .then(() => {\n          setTextButton('START');\n          console.log('irrigation stopped');\n        })\n        .catch((error) => {\n          console.log(error);\n          console.log(\"IRRIGATION DIDN'T STOPPTED!!!\");\n        })\n        .finally(() => {\n          setLoading('determinate');\n          setIsSubmitDisabled(false);\n        });\n    }\n  };\n\n  return (\n    <form className=\"manual-irrigation-form\" onSubmit={clickButton}>\n      <div className=\"minutes-input-wrapper\">\n        <TextField\n          type=\"number\"\n          id=\"minutes-input\"\n          label=\"Minutes\"\n          variant=\"outlined\"\n          value={minutes}\n          required\n          onChange={(event) => {\n            setMinutes(event.target.value);\n          }}\n        />\n      </div>\n      {/* <Timer\n        className=\"timer\"\n        // initialTime={minutes * 60 * 1000}\n      > */}\n      {/* {() => (\n          <> */}\n      <div className=\"breathing-button-wrapper\">\n        <Button\n          id=\"breathing-button\"\n          className=\"manual-button\"\n          variant=\"contained\"\n          color={textButton === 'START' ? 'primary' : 'secondary'}\n          type=\"submit\"\n          disabled={isSubmitDisabled}\n          //   onClick={textButton === 'START' ? start : stop}\n        >\n          {textButton}\n        </Button>\n      </div>\n      <div className=\"timer-wrapper\" hidden={textButton === 'START'}>\n        {formatTimeUnit(value.h)}:{formatTimeUnit(value.m)}:\n        {formatTimeUnit(value.s)}\n        {/* {value.h}:{value.m}:{value.s} */}\n      </div>\n      <div className=\"loader-wrapper\">\n        <CircularProgress className=\"loader\" variant={loading} />\n      </div>\n    </form>\n  );\n}\n\nexport default Manual;\n"]},"metadata":{},"sourceType":"module"}