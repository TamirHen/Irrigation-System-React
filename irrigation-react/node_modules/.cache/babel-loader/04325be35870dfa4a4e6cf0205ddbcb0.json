{"ast":null,"code":"/* eslint-disable no-use-before-define */\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCmWhdLsNWdcoy5n73aVuX2Wb17Qkw4MKw',\n  authDomain: 'smart-irrigation-system-854fa.firebaseapp.com',\n  databaseURL: 'https://smart-irrigation-system-854fa.firebaseio.com',\n  projectId: 'smart-irrigation-system-854fa',\n  storageBucket: 'smart-irrigation-system-854fa.appspot.com',\n  messagingSenderId: '175621433547',\n  appId: '1:175621433547:web:f80840fa5b9790147cd34e',\n  measurementId: 'G-C6JDMHJCFC'\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const generateUserDocument = async (user, additionalData) => {\n  // const firestore = firebase.firestore();\n  console.log(email);\n  if (!user) return 'User is not authorized';\n  const email = user.email;\n  const userRef = firestore.collection('users').doc(email);\n  const userDoc = await userRef.get();\n\n  if (!userDoc.exists) {\n    try {\n      await userRef.set({\n        email,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error('Error creating user document', error);\n    }\n  }\n\n  return getUserDocument(email);\n};\n\nconst getUserDocument = async email => {\n  if (!email) return null;\n\n  try {\n    const userDocument = await firestore.collection('users').doc(email).get();\n    return { ...userDocument.data()\n    };\n  } catch (error) {\n    console.error('Error fetching user', error);\n  }\n\n  return 'Could not find document.';\n};","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/utils/Firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","generateUserDocument","user","additionalData","console","log","email","userRef","collection","doc","userDoc","get","exists","set","error","getUserDocument","userDocument","data"],"mappings":"AAAA;AACA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,+CAFS;AAGrBC,EAAAA,WAAW,EAAE,sDAHQ;AAIrBC,EAAAA,SAAS,EAAE,+BAJU;AAKrBC,EAAAA,aAAa,EAAE,2CALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE,2CAPc;AAQrBC,EAAAA,aAAa,EAAE;AARM,CAAvB;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,cAAvB;AAEA,OAAO,MAAMU,IAAI,GAAGX,QAAQ,CAACW,IAAT,EAAb;AAEP,OAAO,MAAMC,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AAEP,OAAO,MAAMC,oBAAoB,GAAG,OAAOC,IAAP,EAAaC,cAAb,KAAgC;AAClE;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,MAAI,CAACJ,IAAL,EAAW,OAAO,wBAAP;AACX,QAAMI,KAAK,GAAGJ,IAAI,CAACI,KAAnB;AACA,QAAMC,OAAO,GAAGP,SAAS,CAACQ,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCH,KAAlC,CAAhB;AAEA,QAAMI,OAAO,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAtB;;AACA,MAAI,CAACD,OAAO,CAACE,MAAb,EAAqB;AACnB,QAAI;AACF,YAAML,OAAO,CAACM,GAAR,CAAY;AAChBP,QAAAA,KADgB;AAEhB,WAAGH;AAFa,OAAZ,CAAN;AAID,KALD,CAKE,OAAOW,KAAP,EAAc;AACdV,MAAAA,OAAO,CAACU,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACD;AACF;;AACD,SAAOC,eAAe,CAACT,KAAD,CAAtB;AACD,CAnBM;;AAqBP,MAAMS,eAAe,GAAG,MAAOT,KAAP,IAAiB;AACvC,MAAI,CAACA,KAAL,EAAY,OAAO,IAAP;;AACZ,MAAI;AACF,UAAMU,YAAY,GAAG,MAAMhB,SAAS,CAACQ,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCH,KAAlC,EAAyCK,GAAzC,EAA3B;AACA,WAAO,EACL,GAAGK,YAAY,CAACC,IAAb;AADE,KAAP;AAGD,GALD,CAKE,OAAOH,KAAP,EAAc;AACdV,IAAAA,OAAO,CAACU,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACD;;AACD,SAAO,0BAAP;AACD,CAXD","sourcesContent":["/* eslint-disable no-use-before-define */\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCmWhdLsNWdcoy5n73aVuX2Wb17Qkw4MKw',\n  authDomain: 'smart-irrigation-system-854fa.firebaseapp.com',\n  databaseURL: 'https://smart-irrigation-system-854fa.firebaseio.com',\n  projectId: 'smart-irrigation-system-854fa',\n  storageBucket: 'smart-irrigation-system-854fa.appspot.com',\n  messagingSenderId: '175621433547',\n  appId: '1:175621433547:web:f80840fa5b9790147cd34e',\n  measurementId: 'G-C6JDMHJCFC',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\n\nexport const firestore = firebase.firestore();\n\nexport const generateUserDocument = async (user, additionalData) => {\n  // const firestore = firebase.firestore();\n  console.log(email);\n  if (!user) return 'User is not authorized';\n  const email = user.email;\n  const userRef = firestore.collection('users').doc(email);\n\n  const userDoc = await userRef.get();\n  if (!userDoc.exists) {\n    try {\n      await userRef.set({\n        email,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.error('Error creating user document', error);\n    }\n  }\n  return getUserDocument(email);\n};\n\nconst getUserDocument = async (email) => {\n  if (!email) return null;\n  try {\n    const userDocument = await firestore.collection('users').doc(email).get();\n    return {\n      ...userDocument.data(),\n    };\n  } catch (error) {\n    console.error('Error fetching user', error);\n  }\n  return 'Could not find document.';\n};\n"]},"metadata":{},"sourceType":"module"}