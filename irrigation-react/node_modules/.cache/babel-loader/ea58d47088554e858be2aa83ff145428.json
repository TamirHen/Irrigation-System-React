{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/model/Popup.js\";\n\n/* eslint-disable react/jsx-no-bind */\n\n/* eslint-disable func-names */\n\n/* eslint-disable react/sort-comp */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-console */\n\n/* eslint-disable react/no-unused-state */\n\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport ReactModalLogin from 'react-modal-login';\nimport axios from 'axios';\nimport { auth, firestore } from '../utils/Firebase';\nimport './Popup.css';\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: true,\n      loading: false,\n      error: null,\n      loggedIn: null,\n      initialTab: 'login',\n      customError: ''\n    };\n  }\n\n  openModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      showModal: false,\n      error: null\n    }); // this.finishLoading();\n  }\n\n  onLogin() {\n    this.startLoading();\n    const db = firestore;\n    const email = document.querySelector('#email-login').value;\n    const password = document.querySelector('#password-login').value;\n    this.setState({\n      error: null\n    });\n    auth.signInWithEmailAndPassword(email, password).then(cred => {\n      db.collection('users').doc(email).get().then(user => {\n        if (user.exists) {\n          axios.get(`${user.data().dataplicity}/get_week`, {\n            timeout: 10 * 1000\n          }).then(response => {\n            console.log('login successfully'); // this.closeModal();\n\n            this.onLoginSuccess('form');\n            this.props.setData(email, response.data, user);\n          }).catch(error => {\n            console.log(error);\n            this.errorHandler(\"Connection error: please check raspberry's internet connection\");\n          });\n        } else {\n          console.log('No such document');\n          this.errorHandler();\n        }\n      }).catch(function (error) {\n        console.log('Error getting document:', error);\n        this.errorHandler();\n      });\n    }, err => {\n      this.errorHandler();\n    });\n  }\n\n  onRegister() {\n    this.startLoading();\n    const db = firestore;\n    const email = document.querySelector('#email-signup').value;\n    const password = document.querySelector('#password-signup').value;\n    const urlCode = document.querySelector('#urlCode-signup').value;\n    this.setState({\n      error: null\n    });\n    auth.createUserWithEmailAndPassword(email, password).then(cred => {\n      db.collection('users').doc(email).set({\n        dataplicity: urlCode\n      }); // Needs to override error message when user signup successfully but couldn't connect to the pi.\n\n      axios.get(`${urlCode}/get_week`, {\n        timeout: 10 * 1000\n      }).then(response => {\n        console.log('signed up and connected to pi successfully'); // this.closeModal();\n\n        this.onLoginSuccess('form');\n        this.props.setData(email, response.data);\n      }).catch(error => {\n        console.log(error);\n        console.log('Sing up successfully, there was a problem with the connection to the pi');\n        this.errorHandler();\n      });\n    }, () => {\n      this.errorHandler();\n    });\n  }\n\n  onLoginSuccess(method) {\n    this.closeModal();\n    this.setState({\n      loggedIn: method,\n      loading: false\n    });\n  }\n\n  onLoginFail(method, response) {\n    this.setState({\n      loading: false,\n      error: response\n    });\n  }\n\n  startLoading() {\n    this.setState({\n      loading: true\n    });\n  }\n\n  finishLoading() {\n    this.setState({\n      loading: false\n    });\n  }\n\n  afterTabsChange() {\n    this.setState({\n      error: null\n    });\n  }\n\n  errorHandler(customError) {\n    this.setState({\n      error: true,\n      er\n    });\n    this.finishLoading();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ReactModalLogin, {\n          visible: this.state.showModal,\n          onCloseModal: () => {},\n          loading: this.state.loading,\n          initialTab: this.state.initialTab,\n          error: this.state.error,\n          tabs: {\n            afterChange: this.afterTabsChange.bind(this)\n          },\n          loginError: {\n            // containerClass: \"error-message\",\n            label: this.state.customError\n          },\n          registerError: {\n            // containerClass: \"error-message\",\n            label: \"Couldn't sign up, please try again\"\n          },\n          startLoading: this.startLoading.bind(this),\n          finishLoading: this.finishLoading.bind(this),\n          closeBtn: {\n            containerClass: 'close-button'\n          },\n          form: {\n            loginInputs: [{\n              // containerClass: \"popup-input-wrapper\",\n              id: 'email-login',\n              type: 'email',\n              // inputClass: \"popup-input\",\n              name: 'Email',\n              label: 'Email'\n            }, {\n              // containerClass: \"popup-input-wrapper\",\n              id: 'password-login',\n              type: 'password',\n              // inputClass: \"popup-input\",\n              name: 'Password',\n              label: 'Password'\n            }],\n            registerInputs: [{\n              // containerClass: \"popup-input-wrapper\",\n              id: 'email-signup',\n              type: 'email',\n              // inputClass: \"popup-input\",\n              name: 'Email',\n              label: 'Email'\n            }, {\n              // containerClass: \"popup-input-wrapper\",\n              id: 'password-signup',\n              type: 'password',\n              // inputClass: \"popup-input\",\n              name: 'Password',\n              label: 'Password'\n            }, {\n              // containerClass: \"popup-input-wrapper\",\n              id: 'urlCode-signup',\n              type: 'text',\n              // inputClass: \"popup-input\",\n              name: 'URL Code',\n              label: 'URL Code'\n            }],\n            loginBtn: {\n              label: 'Sign in'\n            },\n            registerBtn: {\n              label: 'Sign up'\n            },\n            onLogin: this.onLogin.bind(this),\n            onRegister: this.onRegister.bind(this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Popup;","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/model/Popup.js"],"names":["React","ReactModalLogin","axios","auth","firestore","Popup","Component","constructor","props","state","showModal","loading","error","loggedIn","initialTab","customError","openModal","setState","closeModal","onLogin","startLoading","db","email","document","querySelector","value","password","signInWithEmailAndPassword","then","cred","collection","doc","get","user","exists","data","dataplicity","timeout","response","console","log","onLoginSuccess","setData","catch","errorHandler","err","onRegister","urlCode","createUserWithEmailAndPassword","set","method","onLoginFail","finishLoading","afterTabsChange","er","render","afterChange","bind","label","containerClass","loginInputs","id","type","name","registerInputs","loginBtn","registerBtn"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-no-bind */\n/* eslint-disable func-names */\n/* eslint-disable react/sort-comp */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\n/* eslint-disable react/no-unused-state */\n/* eslint-disable react/destructuring-assignment */\nimport React from 'react';\nimport ReactModalLogin from 'react-modal-login';\nimport axios from 'axios';\nimport { auth, firestore } from '../utils/Firebase';\n\nimport './Popup.css';\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: true,\n      loading: false,\n      error: null,\n      loggedIn: null,\n      initialTab: 'login',\n      customError: '',\n    };\n  }\n\n  openModal() {\n    this.setState({\n      showModal: true,\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      showModal: false,\n      error: null,\n    });\n    // this.finishLoading();\n  }\n\n  onLogin() {\n    this.startLoading();\n    const db = firestore;\n    const email = document.querySelector('#email-login').value;\n    const password = document.querySelector('#password-login').value;\n\n    this.setState({\n      error: null,\n    });\n\n    auth.signInWithEmailAndPassword(email, password).then(\n      (cred) => {\n        db.collection('users')\n          .doc(email)\n          .get()\n          .then((user) => {\n            if (user.exists) {\n              axios\n                .get(`${user.data().dataplicity}/get_week`, {\n                  timeout: 10 * 1000,\n                })\n                .then((response) => {\n                  console.log('login successfully');\n                  // this.closeModal();\n                  this.onLoginSuccess('form');\n                  this.props.setData(email, response.data, user);\n                })\n                .catch((error) => {\n                  console.log(error);\n                  this.errorHandler(\n                    \"Connection error: please check raspberry's internet connection\",\n                  );\n                });\n            } else {\n              console.log('No such document');\n              this.errorHandler();\n            }\n          })\n          .catch(function (error) {\n            console.log('Error getting document:', error);\n            this.errorHandler();\n          });\n      },\n      (err) => {\n        this.errorHandler();\n      },\n    );\n  }\n\n  onRegister() {\n    this.startLoading();\n    const db = firestore;\n    const email = document.querySelector('#email-signup').value;\n    const password = document.querySelector('#password-signup').value;\n    const urlCode = document.querySelector('#urlCode-signup').value;\n\n    this.setState({\n      error: null,\n    });\n\n    auth.createUserWithEmailAndPassword(email, password).then(\n      (cred) => {\n        db.collection('users').doc(email).set({\n          dataplicity: urlCode,\n        });\n\n        // Needs to override error message when user signup successfully but couldn't connect to the pi.\n        axios\n          .get(`${urlCode}/get_week`, { timeout: 10 * 1000 })\n          .then((response) => {\n            console.log('signed up and connected to pi successfully');\n            // this.closeModal();\n            this.onLoginSuccess('form');\n            this.props.setData(email, response.data);\n          })\n          .catch((error) => {\n            console.log(error);\n            console.log(\n              'Sing up successfully, there was a problem with the connection to the pi',\n            );\n            this.errorHandler();\n          });\n      },\n      () => {\n        this.errorHandler();\n      },\n    );\n  }\n\n  onLoginSuccess(method) {\n    this.closeModal();\n    this.setState({\n      loggedIn: method,\n      loading: false,\n    });\n  }\n\n  onLoginFail(method, response) {\n    this.setState({\n      loading: false,\n      error: response,\n    });\n  }\n\n  startLoading() {\n    this.setState({\n      loading: true,\n    });\n  }\n\n  finishLoading() {\n    this.setState({\n      loading: false,\n    });\n  }\n\n  afterTabsChange() {\n    this.setState({\n      error: null,\n    });\n  }\n\n  errorHandler(customError) {\n    this.setState({\n      error: true,\n      er\n    });\n    this.finishLoading();\n  }\n\n  render() {\n    return (\n      <div>\n        <>\n          <ReactModalLogin\n            visible={this.state.showModal}\n            onCloseModal={() => {}}\n            loading={this.state.loading}\n            initialTab={this.state.initialTab}\n            error={this.state.error}\n            tabs={{\n              afterChange: this.afterTabsChange.bind(this),\n            }}\n            loginError={{\n              // containerClass: \"error-message\",\n              label: this.state.customError,\n            }}\n            registerError={{\n              // containerClass: \"error-message\",\n              label: \"Couldn't sign up, please try again\",\n            }}\n            startLoading={this.startLoading.bind(this)}\n            finishLoading={this.finishLoading.bind(this)}\n            closeBtn={{\n              containerClass: 'close-button',\n            }}\n            form={{\n              loginInputs: [\n                {\n                  // containerClass: \"popup-input-wrapper\",\n                  id: 'email-login',\n                  type: 'email',\n                  // inputClass: \"popup-input\",\n                  name: 'Email',\n                  label: 'Email',\n                },\n                {\n                  // containerClass: \"popup-input-wrapper\",\n                  id: 'password-login',\n                  type: 'password',\n                  // inputClass: \"popup-input\",\n                  name: 'Password',\n                  label: 'Password',\n                },\n              ],\n              registerInputs: [\n                {\n                  // containerClass: \"popup-input-wrapper\",\n                  id: 'email-signup',\n                  type: 'email',\n                  // inputClass: \"popup-input\",\n                  name: 'Email',\n                  label: 'Email',\n                },\n                {\n                  // containerClass: \"popup-input-wrapper\",\n                  id: 'password-signup',\n                  type: 'password',\n                  // inputClass: \"popup-input\",\n                  name: 'Password',\n                  label: 'Password',\n                },\n                {\n                  // containerClass: \"popup-input-wrapper\",\n                  id: 'urlCode-signup',\n                  type: 'text',\n                  // inputClass: \"popup-input\",\n                  name: 'URL Code',\n                  label: 'URL Code',\n                },\n              ],\n\n              loginBtn: {\n                label: 'Sign in',\n              },\n              registerBtn: {\n                label: 'Sign up',\n              },\n              onLogin: this.onLogin.bind(this),\n              onRegister: this.onRegister.bind(this),\n            }}\n          />\n        </>\n      </div>\n    );\n  }\n}\n\nexport default Popup;\n"]},"metadata":{},"sourceType":"module"}