{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/Tabs/Manual.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-console */\n\n/* eslint-disable no-unused-expressions */\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Timer from 'react-compound-timer';\nimport './Manual.css';\n\nfunction Manual(props) {\n  _s();\n\n  const [textButton, setTextColor] = useState('START');\n  const [minutes, setMinutes] = useState(0);\n  const [loading, setLoading] = useState('determinate');\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(false);\n  const {\n    user\n  } = props;\n\n  const clickButton = event => {\n    event.preventDefault();\n    setLoading('indeterminate');\n    setIsSubmitDisabled(true);\n\n    if (textButton === 'START') {\n      axios.post(`${user.data().dataplicity}/irrigate_by_minutes/${minutes}`) // DO NOT KIP 1 MINUTE HARDCODED!!\n      .then(() => {\n        setTextColor('STOP');\n        console.log('irrigation started');\n      }).catch(error => {\n        console.log(error);\n      }).finally(() => {\n        setLoading('determinate');\n        setIsSubmitDisabled(false);\n      });\n    } else {\n      axios.post(`${user.data().dataplicity}/stop_irrigate`).then(() => {\n        setTextColor('START');\n        console.log('irrigation stopped');\n      }).catch(error => {\n        console.log(error);\n        console.log(\"IRRIGATION DIDN'T STOPPTED!!!\");\n      }).finally(() => {\n        setLoading('determinate');\n        setIsSubmitDisabled(false);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"manual-irrigation-form\",\n    onSubmit: clickButton,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"minutes-input-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"number\",\n        id: \"minutes-input\",\n        label: \"Minutes\",\n        variant: \"outlined\",\n        value: minutes,\n        required: true,\n        onChange: event => {\n          setMinutes(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {\n      className: \"timer\",\n      initialTime: minutes * 60 * 1000,\n      direction: \"backward\",\n      startImmediately: false,\n      formatValue: value => `${value < 10 ? `0${value}` : value}`,\n      lastUnit: \"m\",\n      timeToUpdate: 1,\n      children: ({\n        start,\n        stop\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"breathing-button-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            id: \"breathing-button\",\n            className: \"manual-button\",\n            variant: \"contained\",\n            color: textButton === 'START' ? 'primary' : 'secondary',\n            type: \"submit\",\n            disabled: isSubmitDisabled,\n            onClick: textButton === 'START' ? start : stop,\n            children: textButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Timer.Minutes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), \":\", /*#__PURE__*/_jsxDEV(Timer.Seconds, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), \":\", /*#__PURE__*/_jsxDEV(Timer.Milliseconds, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        className: \"loader\",\n        variant: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Manual, \"pnNImR5Oza9GL28EArVMEYNOwa8=\");\n\n_c = Manual;\nexport default Manual;\n\nvar _c;\n\n$RefreshReg$(_c, \"Manual\");","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/Tabs/Manual.js"],"names":["React","useState","TextField","Button","axios","CircularProgress","Timer","Manual","props","textButton","setTextColor","minutes","setMinutes","loading","setLoading","isSubmitDisabled","setIsSubmitDisabled","user","clickButton","event","preventDefault","post","data","dataplicity","then","console","log","catch","error","finally","target","value","start","stop"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-unused-expressions */\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Timer from 'react-compound-timer';\n\nimport './Manual.css';\n\nfunction Manual(props) {\n  const [textButton, setTextColor] = useState('START');\n  const [minutes, setMinutes] = useState(0);\n  const [loading, setLoading] = useState('determinate');\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(false);\n\n  const { user } = props;\n\n  const clickButton = (event) => {\n    event.preventDefault();\n    setLoading('indeterminate');\n    setIsSubmitDisabled(true);\n    if (textButton === 'START') {\n      axios\n        .post(`${user.data().dataplicity}/irrigate_by_minutes/${minutes}`) // DO NOT KIP 1 MINUTE HARDCODED!!\n        .then(() => {\n          setTextColor('STOP');\n          console.log('irrigation started');\n        })\n        .catch((error) => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading('determinate');\n          setIsSubmitDisabled(false);\n        });\n    } else {\n      axios\n        .post(`${user.data().dataplicity}/stop_irrigate`)\n        .then(() => {\n          setTextColor('START');\n          console.log('irrigation stopped');\n        })\n        .catch((error) => {\n          console.log(error);\n          console.log(\"IRRIGATION DIDN'T STOPPTED!!!\");\n        })\n        .finally(() => {\n          setLoading('determinate');\n          setIsSubmitDisabled(false);\n        });\n    }\n  };\n\n  return (\n    <form className=\"manual-irrigation-form\" onSubmit={clickButton}>\n      <div className=\"minutes-input-wrapper\">\n        <TextField\n          type=\"number\"\n          id=\"minutes-input\"\n          label=\"Minutes\"\n          variant=\"outlined\"\n          value={minutes}\n          required\n          onChange={(event) => {\n            setMinutes(event.target.value);\n          }}\n        />\n      </div>\n      <Timer\n        className=\"timer\"\n        initialTime={minutes * 60 * 1000}\n        direction=\"backward\"\n        startImmediately={false}\n        formatValue={(value) => `${value < 10 ? `0${value}` : value}`}\n        lastUnit=\"m\"\n        timeToUpdate={1}\n      >\n        {({ start, stop }) => (\n          <>\n            <div className=\"breathing-button-wrapper\">\n              <Button\n                id=\"breathing-button\"\n                className=\"manual-button\"\n                variant=\"contained\"\n                color={textButton === 'START' ? 'primary' : 'secondary'}\n                type=\"submit\"\n                disabled={isSubmitDisabled}\n                onClick={textButton === 'START' ? start : stop}\n              >\n                {textButton}\n              </Button>\n            </div>\n            <div className=\"timer-wrapper\">\n              <Timer.Minutes />:\n              <Timer.Seconds />:\n              <Timer.Milliseconds />\n            </div>\n          </>\n        )}\n      </Timer>\n      <div className=\"loader-wrapper\">\n        <CircularProgress className=\"loader\" variant={loading} />\n      </div>\n    </form>\n  );\n}\n\nexport default Manual;\n"]},"metadata":{},"sourceType":"module"}