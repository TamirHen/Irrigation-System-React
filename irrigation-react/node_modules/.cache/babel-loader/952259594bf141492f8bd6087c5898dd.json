{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/Tabs/Home.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-lone-blocks */\n\n/* eslint-disable no-unused-vars */\nimport React, { useContext, useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { UserContext } from '../providers/UserProvider'; // import WatermingButton from '../components/WateringButton';\n\nimport './Home.css';\nconst useStyles = makeStyles(theme => ({\n  hidden: {\n    display: 'none'\n  },\n  listItem: {\n    backgroundColor: 'rgba(232, 241, 247, 0.795)',\n    cursor: 'unset',\n    borderRadius: '4px',\n    color: '#659adc',\n    fontWeight: 'bold'\n  },\n  stopButton: {\n    backgroundColor: 'rgba(255, 172, 151, 0.795)',\n    padding: '0px',\n    textAlign: 'center',\n    width: '0px',\n    visibility: 'hidden',\n    transition: `all 1s`\n  },\n  stopButtonAppear: {\n    width: '64px',\n    visibility: 'visible',\n    marginLeft: '8px'\n  },\n  listItemStop: {\n    width: '30%',\n    color: '#cf5858',\n    fontWeight: 'bold'\n  }\n}));\n\nconst Home = props => {\n  _s();\n\n  const user = useContext(UserContext);\n  const classes = useStyles();\n  const {\n    status,\n    errorMessage,\n    loader,\n    getStatus,\n    turnOffWatering,\n    nextCycleTime\n  } = props;\n\n  const getHelloMessage = () => {\n    const today = new Date();\n    const curHr = today.getHours();\n\n    if (curHr < 12) {\n      return 'Good morning';\n    }\n\n    if (curHr < 18) {\n      return 'Good afternoon';\n    }\n\n    if (curHr < 21) {\n      return 'Good evening';\n    }\n\n    return 'Good night';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-header\",\n        children: `${getHelloMessage()} ${user.firstName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left-side\",\n            children: /*#__PURE__*/_jsxDEV(List, {\n              component: \"nav\",\n              \"aria-label\": \"main mailbox folders\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-list-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  className: classes.listItem,\n                  button: true,\n                  children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                    disableTypography: true,\n                    primary: `Status: ${status}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"status-error-message\",\n                    children: errorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: getStatus,\n                    children: loader ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                      size: 25\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 25\n                    }, this) : /*#__PURE__*/_jsxDEV(RefreshIcon, {\n                      style: {\n                        color: 'rgb(191 191 191 / 91%)'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  className: clsx(classes.listItem, classes.stopButton, status === 'ON' && classes.stopButtonAppear),\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: turnOffWatering,\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      disableTypography: true,\n                      className: classes.listItemStop,\n                      primary: \"STOP\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                className: \"divider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                className: classes.listItem,\n                button: true,\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  disableTypography: true,\n                  primary: `Next Irrigation: ${nextCycleTime || 'AUTO irrigation is not set'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-side\",\n            children: \"test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Home, \"h0letZVpkJ50w+rCliMD1vmx20w=\", false, function () {\n  return [useStyles];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/Tabs/Home.js"],"names":["React","useContext","useState","CircularProgress","RefreshIcon","IconButton","List","ListItem","ListItemText","Divider","Button","makeStyles","clsx","UserContext","useStyles","theme","hidden","display","listItem","backgroundColor","cursor","borderRadius","color","fontWeight","stopButton","padding","textAlign","width","visibility","transition","stopButtonAppear","marginLeft","listItemStop","Home","props","user","classes","status","errorMessage","loader","getStatus","turnOffWatering","nextCycleTime","getHelloMessage","today","Date","curHr","getHours","firstName"],"mappings":";;;;;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,WAAT,QAA4B,2BAA5B,C,CAEA;;AACA,OAAO,YAAP;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH,GAD+B;AAIvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAE,4BADT;AAERC,IAAAA,MAAM,EAAE,OAFA;AAGRC,IAAAA,YAAY,EAAE,KAHN;AAIRC,IAAAA,KAAK,EAAE,SAJC;AAKRC,IAAAA,UAAU,EAAE;AALJ,GAJ6B;AAWvCC,EAAAA,UAAU,EAAE;AACVL,IAAAA,eAAe,EAAE,4BADP;AAEVM,IAAAA,OAAO,EAAE,KAFC;AAGVC,IAAAA,SAAS,EAAE,QAHD;AAIVC,IAAAA,KAAK,EAAE,KAJG;AAKVC,IAAAA,UAAU,EAAE,QALF;AAMVC,IAAAA,UAAU,EAAG;AANH,GAX2B;AAmBvCC,EAAAA,gBAAgB,EAAE;AAChBH,IAAAA,KAAK,EAAE,MADS;AAEhBC,IAAAA,UAAU,EAAE,SAFI;AAGhBG,IAAAA,UAAU,EAAE;AAHI,GAnBqB;AAwBvCC,EAAAA,YAAY,EAAE;AACZL,IAAAA,KAAK,EAAE,KADK;AAEZL,IAAAA,KAAK,EAAE,SAFK;AAGZC,IAAAA,UAAU,EAAE;AAHA;AAxByB,CAAZ,CAAD,CAA5B;;AA+BA,MAAMU,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,IAAI,GAAGlC,UAAU,CAACY,WAAD,CAAvB;AACA,QAAMuB,OAAO,GAAGtB,SAAS,EAAzB;AACA,QAAM;AACJuB,IAAAA,MADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,MAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,eALI;AAMJC,IAAAA;AANI,MAOFR,KAPJ;;AASA,QAAMS,eAAe,GAAG,MAAM;AAC5B,UAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,UAAMC,KAAK,GAAGF,KAAK,CAACG,QAAN,EAAd;;AACA,QAAID,KAAK,GAAG,EAAZ,EAAgB;AACd,aAAO,cAAP;AACD;;AACD,QAAIA,KAAK,GAAG,EAAZ,EAAgB;AACd,aAAO,gBAAP;AACD;;AACD,QAAIA,KAAK,GAAG,EAAZ,EAAgB;AACd,aAAO,cAAP;AACD;;AACD,WAAO,YAAP;AACD,GAbD;;AAeA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBAAoC,GAAEH,eAAe,EAAG,IACtDR,IAAI,CAACa,SACN;AAFD;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,KAAhB;AAAsB,4BAAW,sBAAjC;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,qBAAf;AAAA,wCACE,QAAC,QAAD;AAAU,kBAAA,SAAS,EAAEZ,OAAO,CAAClB,QAA7B;AAAuC,kBAAA,MAAM,MAA7C;AAAA,0CACE,QAAC,YAAD;AACE,oBAAA,iBAAiB,MADnB;AAEE,oBAAA,OAAO,EAAG,WAAUmB,MAAO;AAF7B;AAAA;AAAA;AAAA;AAAA,0BADF,eAKE;AAAG,oBAAA,SAAS,EAAC,sBAAb;AAAA,8BAAqCC;AAArC;AAAA;AAAA;AAAA;AAAA,0BALF,eAME,QAAC,UAAD;AAAY,oBAAA,IAAI,EAAC,OAAjB;AAAyB,oBAAA,OAAO,EAAEE,SAAlC;AAAA,8BACGD,MAAM,gBACL,QAAC,gBAAD;AAAkB,sBAAA,IAAI,EAAE;AAAxB;AAAA;AAAA;AAAA;AAAA,4BADK,gBAGL,QAAC,WAAD;AACE,sBAAA,KAAK,EAAE;AAAEjB,wBAAAA,KAAK,EAAE;AAAT;AADT;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,0BANF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAiBE,QAAC,QAAD;AACE,kBAAA,SAAS,EAAEV,IAAI,CACbwB,OAAO,CAAClB,QADK,EAEbkB,OAAO,CAACZ,UAFK,EAGba,MAAM,KAAK,IAAX,IAAmBD,OAAO,CAACN,gBAHd,CADjB;AAAA,yCAOE,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAEW,eAAjB;AAAA,2CACE,QAAC,YAAD;AACE,sBAAA,iBAAiB,MADnB;AAEE,sBAAA,SAAS,EAAEL,OAAO,CAACJ,YAFrB;AAGE,sBAAA,OAAO,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,wBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAkCE,QAAC,OAAD;AAAS,gBAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,sBAlCF,eAmCE,QAAC,QAAD;AAAU,gBAAA,SAAS,EAAEI,OAAO,CAAClB,QAA7B;AAAuC,gBAAA,MAAM,MAA7C;AAAA,uCACE,QAAC,YAAD;AACE,kBAAA,iBAAiB,MADnB;AAEE,kBAAA,OAAO,EAAG,oBACRwB,aAAa,IAAI,4BAClB;AAJH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAnCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eA+CE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA4DD,CAvFD;;GAAMT,I;UAEYnB,S;;;KAFZmB,I;AAyFN,eAAeA,IAAf","sourcesContent":["/* eslint-disable no-lone-blocks */\n/* eslint-disable no-unused-vars */\nimport React, { useContext, useState } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { UserContext } from '../providers/UserProvider';\n\n// import WatermingButton from '../components/WateringButton';\nimport './Home.css';\n\nconst useStyles = makeStyles((theme) => ({\n  hidden: {\n    display: 'none',\n  },\n  listItem: {\n    backgroundColor: 'rgba(232, 241, 247, 0.795)',\n    cursor: 'unset',\n    borderRadius: '4px',\n    color: '#659adc',\n    fontWeight: 'bold',\n  },\n  stopButton: {\n    backgroundColor: 'rgba(255, 172, 151, 0.795)',\n    padding: '0px',\n    textAlign: 'center',\n    width: '0px',\n    visibility: 'hidden',\n    transition: `all 1s`,\n  },\n  stopButtonAppear: {\n    width: '64px',\n    visibility: 'visible',\n    marginLeft: '8px',\n  },\n  listItemStop: {\n    width: '30%',\n    color: '#cf5858',\n    fontWeight: 'bold',\n  },\n}));\n\nconst Home = (props) => {\n  const user = useContext(UserContext);\n  const classes = useStyles();\n  const {\n    status,\n    errorMessage,\n    loader,\n    getStatus,\n    turnOffWatering,\n    nextCycleTime,\n  } = props;\n\n  const getHelloMessage = () => {\n    const today = new Date();\n    const curHr = today.getHours();\n    if (curHr < 12) {\n      return 'Good morning';\n    }\n    if (curHr < 18) {\n      return 'Good afternoon';\n    }\n    if (curHr < 21) {\n      return 'Good evening';\n    }\n    return 'Good night';\n  };\n\n  return (\n    <>\n      <div className=\"main-body\">\n        <div className=\"container-header\">{`${getHelloMessage()} ${\n          user.firstName\n        }`}</div>\n        <div className=\"container\">\n          <div className=\"container-body\">\n            <div className=\"left-side\">\n              <List component=\"nav\" aria-label=\"main mailbox folders\">\n                <div className=\"status-list-wrapper\">\n                  <ListItem className={classes.listItem} button>\n                    <ListItemText\n                      disableTypography\n                      primary={`Status: ${status}`}\n                    />\n                    <p className=\"status-error-message\">{errorMessage}</p>\n                    <IconButton size=\"small\" onClick={getStatus}>\n                      {loader ? (\n                        <CircularProgress size={25} />\n                      ) : (\n                        <RefreshIcon\n                          style={{ color: 'rgb(191 191 191 / 91%)' }}\n                        />\n                      )}\n                    </IconButton>\n                  </ListItem>\n                  <ListItem\n                    className={clsx(\n                      classes.listItem,\n                      classes.stopButton,\n                      status === 'ON' && classes.stopButtonAppear,\n                    )}\n                  >\n                    <Button onClick={turnOffWatering}>\n                      <ListItemText\n                        disableTypography\n                        className={classes.listItemStop}\n                        primary=\"STOP\"\n                      />\n                    </Button>\n                  </ListItem>\n                </div>\n                <Divider className=\"divider\" />\n                <ListItem className={classes.listItem} button>\n                  <ListItemText\n                    disableTypography\n                    primary={`Next Irrigation: ${\n                      nextCycleTime || 'AUTO irrigation is not set'\n                    }`}\n                  />\n                </ListItem>\n              </List>\n            </div>\n            <div className=\"right-side\">test</div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}