{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/model/Popup.js\";\nimport React from \"react\";\nimport ReactModalLogin from \"react-modal-login\";\nimport { auth, firestore } from '../utils/Firebase';\nimport axios from 'axios';\nimport Loader from 'react-loaders';\nimport './Popup.css';\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: true,\n      loading: false,\n      error: null\n    };\n  }\n\n  openModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      showModal: false,\n      error: null\n    });\n    this.finishLoading();\n  }\n\n  onLogin() {\n    this.startLoading();\n    const db = firestore;\n    const email = document.querySelector('#email-login').value;\n    const password = document.querySelector('#password-login').value;\n    auth.signInWithEmailAndPassword(email, password).then(cred => {\n      this.finishLoading();\n      db.collection(\"users\").doc(email).get().then(user => {\n        if (user.exists) {\n          axios.get(`${user.data()[\"dataplicity\"]}/get_week`).then(response => {\n            console.log(\"login successfully\");\n            this.closeModal();\n            this.props.callback(response.data);\n          }).catch(error => {\n            console.log(error);\n          });\n        } else {\n          console.log(\"No such document\");\n          this.errorHandler();\n        }\n      }).catch(function (error) {\n        console.log(\"Error getting document:\", error);\n        this.errorHandler();\n      });\n    }, err => {\n      this.finishLoading();\n      this.errorHandler(\"test\");\n    });\n  }\n\n  onRegister() {\n    this.startLoading();\n    const db = firestore;\n    const email = document.querySelector('#email-signup').value;\n    const password = document.querySelector('#password-signup').value;\n    const urlCode = document.querySelector('#urlCode-signup').value;\n    auth.createUserWithEmailAndPassword(email, password).then(cred => {\n      db.collection(\"users\").doc(email).set({\n        dataplicity: urlCode\n      });\n    }, err => {\n      this.finishLoading();\n      this.errorHandler(\"There was a problem, please try again.\");\n      return;\n    });\n    axios.get(`${urlCode}/get_week`).then(response => {\n      console.log(\"signed up and connected to pi successfully\");\n      this.closeModal();\n      this.props.callback(response.data);\n    }).catch(error => {\n      console.log(error);\n      this.errorHandler(\"Sing up successfully, there was a problem with the connection to the pi.\");\n    });\n  }\n\n  startLoading() {\n    this.setState({\n      loading: true\n    });\n  }\n\n  finishLoading() {\n    this.setState({\n      loading: false\n    });\n  }\n\n  afterTabsChange() {\n    this.setState({\n      error: null\n    });\n  }\n\n  errorHandler(message) {\n    let error = document.querySelector(\".error-message\").value;\n    error.innerHTML = message;\n    this.setState({\n      error: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Loader, {\n          className: \"loader\",\n          type: \"ball-clip-rotate\",\n          active: this.state.loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReactModalLogin, {\n          visible: this.state.showModal //   onCloseModal={this.closeModal.bind(this)}\n          ,\n          loading: this.state.loading,\n          error: this.state.error,\n          tabs: {\n            afterChange: this.afterTabsChange.bind(this)\n          },\n          loginError: {\n            containerClass: \"error-message\",\n            label: \"Couldn't sign in, please try again.\"\n          },\n          registerError: {\n            label: \"Couldn't sign up, please try again.\"\n          },\n          startLoading: this.startLoading.bind(this),\n          finishLoading: this.finishLoading.bind(this),\n          closeBtn: {\n            containerClass: \"close-button\"\n          },\n          form: {\n            loginInputs: [{\n              // containerClass: \"popup-input-wrapper\",\n              id: \"email-login\",\n              type: \"email\",\n              // inputClass: \"popup-input\",\n              name: \"Email\",\n              label: \"Email\"\n            }, {\n              // containerClass: \"popup-input-wrapper\",\n              id: \"password-login\",\n              type: \"password\",\n              // inputClass: \"popup-input\",\n              name: \"Password\",\n              label: \"Password\"\n            }],\n            registerInputs: [{\n              // containerClass: \"popup-input-wrapper\",\n              id: \"email-signup\",\n              type: \"email\",\n              // inputClass: \"popup-input\",\n              name: \"Email\",\n              label: \"Email\"\n            }, {\n              // containerClass: \"popup-input-wrapper\",\n              id: \"password-signup\",\n              type: \"password\",\n              // inputClass: \"popup-input\",\n              name: \"Password\",\n              label: \"Password\"\n            }, {\n              // containerClass: \"popup-input-wrapper\",\n              id: \"urlCode-signup\",\n              type: \"text\",\n              // inputClass: \"popup-input\",\n              name: \"URL Code\",\n              label: \"URL Code\"\n            }],\n            loginBtn: {\n              label: \"Sign in\"\n            },\n            registerBtn: {\n              label: \"Sign up\"\n            },\n            onLogin: this.onLogin.bind(this),\n            onRegister: this.onRegister.bind(this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Popup;","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/model/Popup.js"],"names":["React","ReactModalLogin","auth","firestore","axios","Loader","Popup","Component","constructor","props","state","showModal","loading","error","openModal","setState","closeModal","finishLoading","onLogin","startLoading","db","email","document","querySelector","value","password","signInWithEmailAndPassword","then","cred","collection","doc","get","user","exists","data","response","console","log","callback","catch","errorHandler","err","onRegister","urlCode","createUserWithEmailAndPassword","set","dataplicity","afterTabsChange","message","innerHTML","render","afterChange","bind","containerClass","label","loginInputs","id","type","name","registerInputs","loginBtn","registerBtn"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactModalLogin from \"react-modal-login\";\nimport { auth, firestore } from '../utils/Firebase';\nimport axios from 'axios';\nimport Loader from 'react-loaders';\n\nimport './Popup.css';\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      showModal: true,\n      loading: false,\n      error: null\n    };\n  }\n\n \n  openModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n \n  closeModal() {\n    this.setState({\n      showModal: false,\n      error: null\n    });\n    this.finishLoading();\n  }\n\n  onLogin() {\n    this.startLoading();\n    const db = firestore;\n    const email = document.querySelector('#email-login').value;\n    const password = document.querySelector('#password-login').value;\n\n    auth.signInWithEmailAndPassword(email, password).then(cred => {\n      this.finishLoading();\n      db.collection(\"users\").doc(email).get().then(user => {\n        if (user.exists) {\n            axios.get(`${user.data()[\"dataplicity\"]}/get_week`).then(response => {\n              console.log(\"login successfully\")\n              this.closeModal();\n              this.props.callback(response.data);\n            }).catch(error => {\n              console.log(error);\n            })\n        } else {\n            console.log(\"No such document\");\n            this.errorHandler();\n        }\n    }).catch(function(error) {\n        console.log(\"Error getting document:\", error);\n        this.errorHandler();\n    });  \n    }, err => {\n      this.finishLoading();\n      this.errorHandler(\"test\");\n    });\n  }\n\n  onRegister() {\n    this.startLoading();\n    const db = firestore;\n    const email = document.querySelector('#email-signup').value;\n    const password = document.querySelector('#password-signup').value;\n    const urlCode = document.querySelector('#urlCode-signup').value;\n\n    auth.createUserWithEmailAndPassword(email, password).then(cred => {\n      db.collection(\"users\").doc(email).set({\n        dataplicity: urlCode\n      });\n    }, err => {\n      this.finishLoading();\n      this.errorHandler(\"There was a problem, please try again.\");\n      return;\n    });\n\n    axios.get(`${urlCode}/get_week`).then(response => {\n      console.log(\"signed up and connected to pi successfully\")\n      this.closeModal();\n      this.props.callback(response.data);\n    }).catch(error => {\n      console.log(error);\n      this.errorHandler(\"Sing up successfully, there was a problem with the connection to the pi.\");\n    })\n\n  }\n\n  \n  startLoading() {\n    this.setState({\n      loading: true\n    });\n  }\n \n  finishLoading() {\n    this.setState({\n      loading: false\n    });\n  }\n \n  afterTabsChange() {\n    this.setState({\n      error: null\n    });\n  }\n\n  errorHandler(message) {\n    let error = document.querySelector(\".error-message\").value;\n    error.innerHTML = message;\n    this.setState({\n      error: true\n    });\n  }\n \n  render() {\n    return (\n      <div>\n        <React.Fragment>\n          <Loader\n            className=\"loader\"\n            type=\"ball-clip-rotate\"\n            active={this.state.loading}\n          />\n          <ReactModalLogin\n            visible={this.state.showModal}\n          //   onCloseModal={this.closeModal.bind(this)}\n            loading={this.state.loading}\n            error={this.state.error}\n            tabs={{\n              afterChange: this.afterTabsChange.bind(this)\n            }}\n            loginError={{\n              containerClass: \"error-message\",\n              label: \"Couldn't sign in, please try again.\"\n            }}\n            registerError={{\n              label: \"Couldn't sign up, please try again.\"\n            }}\n            startLoading={this.startLoading.bind(this)}\n            finishLoading={this.finishLoading.bind(this)}\n            closeBtn={{\n              containerClass: \"close-button\"\n            }}\n            form={{\n              loginInputs: [\n                  {\n                      // containerClass: \"popup-input-wrapper\",\n                      id: \"email-login\",\n                      type: \"email\",\n                      // inputClass: \"popup-input\",\n                      name: \"Email\",\n                      label: \"Email\"\n                  },\n                  {\n                      // containerClass: \"popup-input-wrapper\",\n                      id: \"password-login\",\n                      type: \"password\",\n                      // inputClass: \"popup-input\",\n                      name: \"Password\",\n                      label: \"Password\"\n                  }\n              ],\n              registerInputs: [\n                  {\n                      // containerClass: \"popup-input-wrapper\",\n                      id: \"email-signup\",\n                      type: \"email\",\n                      // inputClass: \"popup-input\",\n                      name: \"Email\",\n                      label: \"Email\"\n                  },\n                  {\n                      // containerClass: \"popup-input-wrapper\",\n                      id: \"password-signup\",\n                      type: \"password\",\n                      // inputClass: \"popup-input\",\n                      name: \"Password\",\n                      label: \"Password\"\n                  },\n                  {\n                      // containerClass: \"popup-input-wrapper\",\n                      id: \"urlCode-signup\",\n                      type: \"text\",\n                      // inputClass: \"popup-input\",\n                      name: \"URL Code\",\n                      label: \"URL Code\"\n                  }\n              ],\n\n              loginBtn: {\n                  label: \"Sign in\"\n              },\n              registerBtn: {\n                  label: \"Sign up\"\n              },\n              onLogin: this.onLogin.bind(this),\n              onRegister: this.onRegister.bind(this)\n            }}\n          />\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n\nexport default Popup;"]},"metadata":{},"sourceType":"module"}