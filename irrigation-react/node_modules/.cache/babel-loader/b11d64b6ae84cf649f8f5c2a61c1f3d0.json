{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/Tabs/Manual.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable import/no-named-as-default */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-console */\n\n/* eslint-disable no-unused-expressions */\nimport React, { useState, useContext, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTimer } from 'react-compound-timer';\nimport formatTimeUnit from '../utils/FormatTimeUnit';\nimport { UserContext } from '../providers/UserProvider';\nimport WatermingButton from '../components/WateringButton';\nimport { validateMintues } from '../utils/Validate';\nimport './Manual.css';\n\nconst Manual = props => {\n  _s();\n\n  const user = useContext(UserContext);\n  const [textButton, setTextButton] = useState('START');\n  const [errorMessage, setErrorMessage] = useState('valid');\n  const [minutes, setMinutes] = useState(5);\n  const [loading, setLoading] = useState('determinate');\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(false);\n  const [isFieldDisabled, setIsFieldDisabled] = useState(false);\n  const [isBreathing, setIsBreathing] = useState(false);\n  const {\n    value,\n    controls: {\n      setTime,\n      start,\n      stop\n    }\n  } = useTimer({\n    initialTime: minutes,\n    direction: 'backward',\n    startImmediately: false,\n    lastUnit: 'h',\n    timeToUpdate: 1000,\n    onStop: () => {\n      setLoading('determinate');\n      setIsSubmitDisabled(false);\n      setIsFieldDisabled(false);\n      setIsBreathing(false);\n      setErrorMessage('valid');\n    },\n    checkpoints: [{\n      time: 1,\n      callback: () => {\n        stop();\n        setTextButton('START');\n      }\n    }]\n  });\n  const {\n    urlCode,\n    sessionExpired,\n    status\n  } = props;\n\n  const startTimer = () => {\n    setTime(minutes * 60 * 1000);\n    start();\n    setIsBreathing(true);\n  };\n\n  const stopTimer = () => {\n    stop();\n  };\n\n  const stopIrrigating = () => {\n    axios.post(`${urlCode}/stop_irrigate`, {\n      timeout: 10 * 1000\n    }).then(() => {\n      setTextButton('START');\n      console.log('irrigation stopped');\n      stopTimer();\n    }).catch(error => {\n      console.log(error);\n      console.log(\"IRRIGATION DIDN'T STOPPTED!!!\");\n      setErrorMessage(\"IRRIGATION DIDN'T STOPPTED!\\nPlease check the internet connection your raspberry is using\");\n      setLoading('determinate');\n      setIsSubmitDisabled(false);\n    });\n  };\n\n  const clickButton = event => {\n    event.preventDefault();\n    setErrorMessage('valid'); // initial message.\n\n    setLoading('indeterminate');\n    setIsSubmitDisabled(true);\n    setIsFieldDisabled(true);\n    const message = validateMintues(minutes);\n\n    if (textButton === 'START' && message === 'valid') {\n      if (user) {\n        axios.post(`${urlCode}/irrigate_by_minutes/${minutes}`, {\n          timeout: 10 * 1000\n        }).then(() => {\n          setTextButton('STOP');\n          console.log('irrigation started');\n          startTimer();\n        }).catch(error => {\n          console.log(error);\n          setIsFieldDisabled(false);\n          setErrorMessage('Connection error, please try again later');\n        }).finally(() => {\n          setLoading('determinate');\n          setIsSubmitDisabled(false);\n        });\n      } else {\n        console.log('User has logged out - session expired!');\n        sessionExpired();\n      }\n    } else if (message !== 'valid') {\n      setLoading('determinate');\n      setIsSubmitDisabled(false);\n      setIsFieldDisabled(false);\n      setErrorMessage(message);\n    } else if (user) {\n      stopIrrigating();\n    } else {\n      console.log('User has logged out - session expired!');\n      sessionExpired();\n    }\n  };\n\n  useEffect(() => {\n    // only if status changes to 'OFF' watering needs to stop\n    if (status === 'OFF') {\n      stopIrrigating();\n    }\n  }, [status]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"manual-irrigation-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"minutes-input-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"number\",\n        id: \"minutes-input\",\n        label: \"Minutes\",\n        variant: \"outlined\",\n        value: minutes,\n        required: true,\n        onChange: event => {\n          setMinutes(event.target.value);\n        },\n        disabled: isFieldDisabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WatermingButton, {\n      isBreathing: isBreathing,\n      textButton: textButton,\n      isSubmitDisabled: isSubmitDisabled,\n      onClick: clickButton,\n      height: \"200px\",\n      width: \"200px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-wrapper\",\n      hidden: textButton === 'START',\n      children: [formatTimeUnit(value.h), \":\", formatTimeUnit(value.m), \":\", formatTimeUnit(value.s)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message-wrapper\",\n      hidden: errorMessage === 'valid',\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manual-loader-wrapper\",\n      hidden: loading === 'determinate',\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        className: \"manual-loader\",\n        variant: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Manual, \"7HLFthjwVd0FyAlOCi33LIerorA=\", false, function () {\n  return [useTimer];\n});\n\n_c = Manual;\nexport default Manual;\n\nvar _c;\n\n$RefreshReg$(_c, \"Manual\");","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/Tabs/Manual.js"],"names":["React","useState","useContext","useEffect","TextField","axios","CircularProgress","useTimer","formatTimeUnit","UserContext","WatermingButton","validateMintues","Manual","props","user","textButton","setTextButton","errorMessage","setErrorMessage","minutes","setMinutes","loading","setLoading","isSubmitDisabled","setIsSubmitDisabled","isFieldDisabled","setIsFieldDisabled","isBreathing","setIsBreathing","value","controls","setTime","start","stop","initialTime","direction","startImmediately","lastUnit","timeToUpdate","onStop","checkpoints","time","callback","urlCode","sessionExpired","status","startTimer","stopTimer","stopIrrigating","post","timeout","then","console","log","catch","error","clickButton","event","preventDefault","message","finally","target","h","m","s"],"mappings":"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","sourcesContent":["/* eslint-disable import/no-named-as-default */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-console */\n/* eslint-disable no-unused-expressions */\nimport React, { useState, useContext, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useTimer } from 'react-compound-timer';\nimport formatTimeUnit from '../utils/FormatTimeUnit';\n\nimport { UserContext } from '../providers/UserProvider';\nimport WatermingButton from '../components/WateringButton';\nimport { validateMintues } from '../utils/Validate';\n\nimport './Manual.css';\n\nconst Manual = (props) => {\n  const user = useContext(UserContext);\n  const [textButton, setTextButton] = useState('START');\n  const [errorMessage, setErrorMessage] = useState('valid');\n  const [minutes, setMinutes] = useState(5);\n  const [loading, setLoading] = useState('determinate');\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(false);\n  const [isFieldDisabled, setIsFieldDisabled] = useState(false);\n  const [isBreathing, setIsBreathing] = useState(false);\n  const {\n    value,\n    controls: { setTime, start, stop },\n  } = useTimer({\n    initialTime: minutes,\n    direction: 'backward',\n    startImmediately: false,\n    lastUnit: 'h',\n    timeToUpdate: 1000,\n    onStop: () => {\n      setLoading('determinate');\n      setIsSubmitDisabled(false);\n      setIsFieldDisabled(false);\n      setIsBreathing(false);\n      setErrorMessage('valid');\n    },\n    checkpoints: [\n      {\n        time: 1,\n        callback: () => {\n          stop();\n          setTextButton('START');\n        },\n      },\n    ],\n  });\n\n  const { urlCode, sessionExpired, status } = props;\n\n  const startTimer = () => {\n    setTime(minutes * 60 * 1000);\n    start();\n    setIsBreathing(true);\n  };\n\n  const stopTimer = () => {\n    stop();\n  };\n\n  const stopIrrigating = () => {\n    axios\n      .post(`${urlCode}/stop_irrigate`, {\n        timeout: 10 * 1000,\n      })\n      .then(() => {\n        setTextButton('START');\n        console.log('irrigation stopped');\n        stopTimer();\n      })\n      .catch((error) => {\n        console.log(error);\n        console.log(\"IRRIGATION DIDN'T STOPPTED!!!\");\n        setErrorMessage(\n          \"IRRIGATION DIDN'T STOPPTED!\\nPlease check the internet connection your raspberry is using\",\n        );\n        setLoading('determinate');\n        setIsSubmitDisabled(false);\n      });\n  };\n\n  const clickButton = (event) => {\n    event.preventDefault();\n    setErrorMessage('valid'); // initial message.\n    setLoading('indeterminate');\n    setIsSubmitDisabled(true);\n    setIsFieldDisabled(true);\n    const message = validateMintues(minutes);\n    if (textButton === 'START' && message === 'valid') {\n      if (user) {\n        axios\n          .post(`${urlCode}/irrigate_by_minutes/${minutes}`, {\n            timeout: 10 * 1000,\n          })\n          .then(() => {\n            setTextButton('STOP');\n            console.log('irrigation started');\n            startTimer();\n          })\n          .catch((error) => {\n            console.log(error);\n            setIsFieldDisabled(false);\n            setErrorMessage('Connection error, please try again later');\n          })\n          .finally(() => {\n            setLoading('determinate');\n            setIsSubmitDisabled(false);\n          });\n      } else {\n        console.log('User has logged out - session expired!');\n        sessionExpired();\n      }\n    } else if (message !== 'valid') {\n      setLoading('determinate');\n      setIsSubmitDisabled(false);\n      setIsFieldDisabled(false);\n      setErrorMessage(message);\n    } else if (user) {\n      stopIrrigating();\n    } else {\n      console.log('User has logged out - session expired!');\n      sessionExpired();\n    }\n  };\n\n  useEffect(() => {\n    // only if status changes to 'OFF' watering needs to stop\n    if (status === 'OFF') {\n      stopIrrigating();\n    }\n  }, [status]);\n\n  return (\n    <form className=\"manual-irrigation-form\">\n      <div className=\"minutes-input-wrapper\">\n        <TextField\n          type=\"number\"\n          id=\"minutes-input\"\n          label=\"Minutes\"\n          variant=\"outlined\"\n          value={minutes}\n          required\n          onChange={(event) => {\n            setMinutes(event.target.value);\n          }}\n          disabled={isFieldDisabled}\n        />\n      </div>\n\n      <WatermingButton\n        isBreathing={isBreathing}\n        textButton={textButton}\n        isSubmitDisabled={isSubmitDisabled}\n        onClick={clickButton}\n        height=\"200px\"\n        width=\"200px\"\n      />\n      {/* <div className=\"breathing-button-wrapper\">\n        <Button\n          id=\"breathing-button\"\n          className={`manual-button ${isBreathing ? 'breathing' : ''}`}\n          variant=\"contained\"\n          color={textButton === 'START' ? 'primary' : 'secondary'}\n          type=\"submit\"\n          disabled={isSubmitDisabled}\n        >\n          {textButton}\n        </Button>\n      </div> */}\n      <div className=\"timer-wrapper\" hidden={textButton === 'START'}>\n        {formatTimeUnit(value.h)}:{formatTimeUnit(value.m)}:\n        {formatTimeUnit(value.s)}\n      </div>\n      <div className=\"error-message-wrapper\" hidden={errorMessage === 'valid'}>\n        <p className=\"error-message\">{errorMessage}</p>\n      </div>\n      <div className=\"manual-loader-wrapper\" hidden={loading === 'determinate'}>\n        <CircularProgress className=\"manual-loader\" variant={loading} />\n      </div>\n    </form>\n  );\n};\n\nexport default Manual;\n"]},"metadata":{},"sourceType":"module"}