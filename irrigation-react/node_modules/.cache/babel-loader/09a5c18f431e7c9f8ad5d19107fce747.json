{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/Tabs/Home.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-lone-blocks */\n\n/* eslint-disable no-unused-vars */\nimport React, { useContext } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport { UserContext } from '../providers/UserProvider';\nimport WatermingButton from '../components/WateringButton';\nimport './Home.css';\n\nconst Home = props => {\n  _s();\n\n  const user = useContext(UserContext); // const [isBreathing, setIsBreathing] = useState(false);\n  // const [status, setStatus] = useState('OFF');\n  // const [errorMessage, setErrorMessage] = useState('');\n  // const [loader, setLoader] = useState(false);\n\n  const {\n    status,\n    errorMessage,\n    loader,\n    getStatus\n  } = props;\n\n  const getHelloMessage = () => {\n    const today = new Date();\n    const curHr = today.getHours();\n\n    if (curHr < 12) {\n      return 'Good morning';\n    }\n\n    if (curHr < 18) {\n      return 'Good afternoon';\n    }\n\n    return 'Good evening';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-header\",\n          children: `${getHelloMessage()} ${user.firstName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-body\",\n          children: /*#__PURE__*/_jsxDEV(List, {\n            component: \"nav\",\n            \"aria-label\": \"main mailbox folders\",\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              className: \"list-item\",\n              button: true,\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `Status: ${status}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: getStatus,\n                children: loader ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 25\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(RefreshIcon, {\n                  style: {\n                    color: 'rgb(191 191 191 / 91%)'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              className: \"divider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n              className: \"list-item\",\n              button: true,\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"Next Irrigation:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Home, \"T/slviYl6xUb2nQaiedYLY1KgOo=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/Tabs/Home.js"],"names":["React","useContext","CircularProgress","RefreshIcon","IconButton","List","ListItem","ListItemText","Divider","UserContext","WatermingButton","Home","props","user","status","errorMessage","loader","getStatus","getHelloMessage","today","Date","curHr","getHours","firstName","color"],"mappings":";;;;;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,SAASC,WAAT,QAA4B,2BAA5B;AAEA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,IAAI,GAAGZ,UAAU,CAACQ,WAAD,CAAvB,CADsB,CAGtB;AACA;AACA;AACA;;AAEA,QAAM;AAAEK,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA,MAAxB;AAAgCC,IAAAA;AAAhC,MAA8CL,KAApD;;AAEA,QAAMM,eAAe,GAAG,MAAM;AAC5B,UAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,UAAMC,KAAK,GAAGF,KAAK,CAACG,QAAN,EAAd;;AACA,QAAID,KAAK,GAAG,EAAZ,EAAgB;AACd,aAAO,cAAP;AACD;;AACD,QAAIA,KAAK,GAAG,EAAZ,EAAgB;AACd,aAAO,gBAAP;AACD;;AACD,WAAO,cAAP;AACD,GAVD;;AAYA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,oBAAoC,GAAEH,eAAe,EAAG,IACtDL,IAAI,CAACU,SACN;AAFD;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,KAAhB;AAAsB,0BAAW,sBAAjC;AAAA,oCACE,QAAC,QAAD;AAAU,cAAA,SAAS,EAAC,WAApB;AAAgC,cAAA,MAAM,MAAtC;AAAA,sCACE,QAAC,YAAD;AAAc,gBAAA,OAAO,EAAG,WAAUT,MAAO;AAAzC;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,UAAD;AAAY,gBAAA,IAAI,EAAC,OAAjB;AAAyB,gBAAA,OAAO,EAAEG,SAAlC;AAAA,0BACGD,MAAM,gBACL,QAAC,gBAAD;AAAkB,kBAAA,IAAI,EAAE;AAAxB;AAAA;AAAA;AAAA;AAAA,wBADK,gBAGL,QAAC,WAAD;AAAa,kBAAA,KAAK,EAAE;AAAEQ,oBAAAA,KAAK,EAAE;AAAT;AAApB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAWE,QAAC,OAAD;AAAS,cAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,oBAXF,eAYE,QAAC,QAAD;AAAU,cAAA,SAAS,EAAC,WAApB;AAAgC,cAAA,MAAM,MAAtC;AAAA,qCACE,QAAC,YAAD;AAAc,gBAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA2DD,CAjFD;;GAAMb,I;;KAAAA,I;AAmFN,eAAeA,IAAf","sourcesContent":["/* eslint-disable no-lone-blocks */\n/* eslint-disable no-unused-vars */\nimport React, { useContext } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\n\nimport { UserContext } from '../providers/UserProvider';\n\nimport WatermingButton from '../components/WateringButton';\nimport './Home.css';\n\nconst Home = (props) => {\n  const user = useContext(UserContext);\n\n  // const [isBreathing, setIsBreathing] = useState(false);\n  // const [status, setStatus] = useState('OFF');\n  // const [errorMessage, setErrorMessage] = useState('');\n  // const [loader, setLoader] = useState(false);\n\n  const { status, errorMessage, loader, getStatus } = props;\n\n  const getHelloMessage = () => {\n    const today = new Date();\n    const curHr = today.getHours();\n    if (curHr < 12) {\n      return 'Good morning';\n    }\n    if (curHr < 18) {\n      return 'Good afternoon';\n    }\n    return 'Good evening';\n  };\n\n  return (\n    <>\n      <div className=\"main-body\">\n        <div className=\"container\">\n          <div className=\"container-header\">{`${getHelloMessage()} ${\n            user.firstName\n          }`}</div>\n          <div className=\"container-body\">\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\n              <ListItem className=\"list-item\" button>\n                <ListItemText primary={`Status: ${status}`} />\n                <IconButton size=\"small\" onClick={getStatus}>\n                  {loader ? (\n                    <CircularProgress size={25} />\n                  ) : (\n                    <RefreshIcon style={{ color: 'rgb(191 191 191 / 91%)' }} />\n                  )}\n                </IconButton>\n              </ListItem>\n              <Divider className=\"divider\" />\n              <ListItem className=\"list-item\" button>\n                <ListItemText primary=\"Next Irrigation:\" />\n              </ListItem>\n            </List>\n            {/* <div className=\"status-text-wrapper\">\n              <p className=\"status-text\">{`Status: ${status}`}</p>\n              <IconButton size=\"small\">\n                <RefreshIcon />\n              </IconButton>\n            </div> */}\n\n            {/* <WatermingButton\n              isBreathing={isBreathing}\n              textButton={\n                isSubmitDisabled ? (\n                  <CircularProgress className=\"status-loader\" size=\"10\" />\n                ) : (\n                  <RefreshIcon fontSize=\"large\" style={{ color: '#cecbcb' }} />\n                )\n              }\n              isSubmitDisabled={isSubmitDisabled}\n              onClick={getStatus}\n            /> */}\n            {/* <p className=\"status-error-message\">{errorMessage}</p> */}\n          </div>\n        </div>\n        {/* <hr orientation=\"vertical\" />\n        <div className=\"container right\">\n          <div className=\"container-header\">Watering status</div>\n          <div className=\"container-body\">\n            <div className=\"current-status-wrapper\">\n              <p className=\"current-status\">Currently:{` ${status}`}</p>\n            </div>\n            <p className=\"status-error-message\">{errorMessage}</p>\n          </div>\n        </div> */}\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}