{"ast":null,"code":"/* eslint-disable no-console */\n\n/* eslint-disable no-plusplus */\n\n/* eslint-disable no-restricted-syntax */\nimport moment from 'moment';\n\nconst sort = weekData => {\n  const sorter = {\n    sunday: 0,\n    monday: 1,\n    tuesday: 2,\n    wednesday: 3,\n    thursday: 4,\n    friday: 5,\n    saturday: 6\n  };\n  weekData.sort(function sortByDay(a, b) {\n    let day1 = a.day.toLowerCase();\n    let day2 = b.day.toLowerCase();\n    return sorter[day1] - sorter[day2];\n  });\n};\n\nconst nextIrrigation = (weekData, roundsData) => {\n  if (!weekData || !roundsData) {\n    return 'Error';\n  }\n\n  sort(weekData);\n  const nextSevenDays = [];\n\n  for (let i = 0; i < 7; i++) {\n    nextSevenDays[i] = moment().add(i, 'days').format('dddd');\n    let nextIrrigationTime = moment(new Date(), 'HH:mm:ss');\n    let nextIrrigationRound;\n\n    if (weekData[nextSevenDays[i].toLowerCase()] === true) {\n      for (const [, round] of Object.entries(roundsData)) {\n        const startTimeMoment = moment(round.startTime, 'HH:mm:ss');\n\n        if (round.isActive && i === 0 && // i = 0 - today\n        startTimeMoment.isAfter(moment(new Date(), 'HH:mm:ss')) || round.isActive && i !== 0) {\n          if (startTimeMoment.isBefore(nextIrrigationTime)) {\n            nextIrrigationTime = startTimeMoment;\n            nextIrrigationRound = round;\n          }\n        }\n      }\n\n      if (nextIrrigationRound) {\n        const times = nextIrrigationRound.startTime.split(':');\n        return `${nextSevenDays[i]} ${times[0]}:${times[1]}`;\n      }\n    }\n  }\n\n  return 'Not set';\n};\n\nexport default nextIrrigation;","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/utils/NextIrrigation.js"],"names":["moment","sort","weekData","sorter","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sortByDay","a","b","day1","day","toLowerCase","day2","nextIrrigation","roundsData","nextSevenDays","i","add","format","nextIrrigationTime","Date","nextIrrigationRound","round","Object","entries","startTimeMoment","startTime","isActive","isAfter","isBefore","times","split"],"mappings":"AAAA;;AACA;;AACA;AACA,OAAOA,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,IAAI,GAAIC,QAAD,IAAc;AACzB,QAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,CADK;AAEbC,IAAAA,MAAM,EAAE,CAFK;AAGbC,IAAAA,OAAO,EAAE,CAHI;AAIbC,IAAAA,SAAS,EAAE,CAJE;AAKbC,IAAAA,QAAQ,EAAE,CALG;AAMbC,IAAAA,MAAM,EAAE,CANK;AAObC,IAAAA,QAAQ,EAAE;AAPG,GAAf;AAUAR,EAAAA,QAAQ,CAACD,IAAT,CAAc,SAASU,SAAT,CAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;AACrC,QAAIC,IAAI,GAAGF,CAAC,CAACG,GAAF,CAAMC,WAAN,EAAX;AACA,QAAIC,IAAI,GAAGJ,CAAC,CAACE,GAAF,CAAMC,WAAN,EAAX;AACA,WAAOb,MAAM,CAACW,IAAD,CAAN,GAAeX,MAAM,CAACc,IAAD,CAA5B;AACD,GAJD;AAKD,CAhBD;;AAkBA,MAAMC,cAAc,GAAG,CAAChB,QAAD,EAAWiB,UAAX,KAA0B;AAC/C,MAAI,CAACjB,QAAD,IAAa,CAACiB,UAAlB,EAA8B;AAC5B,WAAO,OAAP;AACD;;AACDlB,EAAAA,IAAI,CAACC,QAAD,CAAJ;AACA,QAAMkB,aAAa,GAAG,EAAtB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BD,IAAAA,aAAa,CAACC,CAAD,CAAb,GAAmBrB,MAAM,GAAGsB,GAAT,CAAaD,CAAb,EAAgB,MAAhB,EAAwBE,MAAxB,CAA+B,MAA/B,CAAnB;AACA,QAAIC,kBAAkB,GAAGxB,MAAM,CAAC,IAAIyB,IAAJ,EAAD,EAAa,UAAb,CAA/B;AACA,QAAIC,mBAAJ;;AACA,QAAIxB,QAAQ,CAACkB,aAAa,CAACC,CAAD,CAAb,CAAiBL,WAAjB,EAAD,CAAR,KAA6C,IAAjD,EAAuD;AACrD,WAAK,MAAM,GAAGW,KAAH,CAAX,IAAwBC,MAAM,CAACC,OAAP,CAAeV,UAAf,CAAxB,EAAoD;AAClD,cAAMW,eAAe,GAAG9B,MAAM,CAAC2B,KAAK,CAACI,SAAP,EAAkB,UAAlB,CAA9B;;AACA,YACGJ,KAAK,CAACK,QAAN,IACCX,CAAC,KAAK,CADP,IACY;AACXS,QAAAA,eAAe,CAACG,OAAhB,CAAwBjC,MAAM,CAAC,IAAIyB,IAAJ,EAAD,EAAa,UAAb,CAA9B,CAFF,IAGCE,KAAK,CAACK,QAAN,IAAkBX,CAAC,KAAK,CAJ3B,EAKE;AACA,cAAIS,eAAe,CAACI,QAAhB,CAAyBV,kBAAzB,CAAJ,EAAkD;AAChDA,YAAAA,kBAAkB,GAAGM,eAArB;AACAJ,YAAAA,mBAAmB,GAAGC,KAAtB;AACD;AACF;AACF;;AACD,UAAID,mBAAJ,EAAyB;AACvB,cAAMS,KAAK,GAAGT,mBAAmB,CAACK,SAApB,CAA8BK,KAA9B,CAAoC,GAApC,CAAd;AACA,eAAQ,GAAEhB,aAAa,CAACC,CAAD,CAAI,IAAGc,KAAK,CAAC,CAAD,CAAI,IAAGA,KAAK,CAAC,CAAD,CAAI,EAAnD;AACD;AACF;AACF;;AACD,SAAO,SAAP;AACD,CAhCD;;AAkCA,eAAejB,cAAf","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-plusplus */\n/* eslint-disable no-restricted-syntax */\nimport moment from 'moment';\n\nconst sort = (weekData) => {\n  const sorter = {\n    sunday: 0,\n    monday: 1,\n    tuesday: 2,\n    wednesday: 3,\n    thursday: 4,\n    friday: 5,\n    saturday: 6,\n  };\n\n  weekData.sort(function sortByDay(a, b) {\n    let day1 = a.day.toLowerCase();\n    let day2 = b.day.toLowerCase();\n    return sorter[day1] - sorter[day2];\n  });\n};\n\nconst nextIrrigation = (weekData, roundsData) => {\n  if (!weekData || !roundsData) {\n    return 'Error';\n  }\n  sort(weekData);\n  const nextSevenDays = [];\n  for (let i = 0; i < 7; i++) {\n    nextSevenDays[i] = moment().add(i, 'days').format('dddd');\n    let nextIrrigationTime = moment(new Date(), 'HH:mm:ss');\n    let nextIrrigationRound;\n    if (weekData[nextSevenDays[i].toLowerCase()] === true) {\n      for (const [, round] of Object.entries(roundsData)) {\n        const startTimeMoment = moment(round.startTime, 'HH:mm:ss');\n        if (\n          (round.isActive &&\n            i === 0 && // i = 0 - today\n            startTimeMoment.isAfter(moment(new Date(), 'HH:mm:ss'))) ||\n          (round.isActive && i !== 0)\n        ) {\n          if (startTimeMoment.isBefore(nextIrrigationTime)) {\n            nextIrrigationTime = startTimeMoment;\n            nextIrrigationRound = round;\n          }\n        }\n      }\n      if (nextIrrigationRound) {\n        const times = nextIrrigationRound.startTime.split(':');\n        return `${nextSevenDays[i]} ${times[0]}:${times[1]}`;\n      }\n    }\n  }\n  return 'Not set';\n};\n\nexport default nextIrrigation;\n"]},"metadata":{},"sourceType":"module"}