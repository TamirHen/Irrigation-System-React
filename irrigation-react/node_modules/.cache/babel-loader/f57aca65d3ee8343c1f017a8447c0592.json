{"ast":null,"code":"const validateWeek = data => {\n  console.log(data);\n\n  if (data.firstRoundStart && !data.firstRoundEnd || !data.firstRoundStart && data.firstRoundEnd) {\n    return 'Round 1 is invalid';\n  }\n\n  if (data.secondRoundStart && !data.secondRoundEnd || !data.secondRoundStart && data.secondRoundEnd) {\n    return 'Round 2 is invalid';\n  }\n\n  if (data.thirdRoundStart && !data.thirdRoundEnd || !data.thirdRoundStart && data.thirdRoundEnd) {\n    return 'Round 3 is invalid';\n  }\n\n  if (data.firstRoundStart > data.firstRoundEnd) {\n    return 'Error in round 1: end time before start time';\n  }\n\n  if (data.secondRoundStart > data.secondRoundEnd) {\n    return 'Error in round 2: end time before start time';\n  }\n\n  if (data.thirdRoundStart > data.thirdRoundEnd) {\n    return 'Error in round 3: end time before start time';\n  }\n\n  if (data.isFirstRoundActive && !data.firstRoundStart && !data.firstRoundEnd) {\n    return 'Error: round 1 is active but empty';\n  }\n\n  if (data.isSecondRoundActive && !data.secondRoundStart && !data.secondRoundEnd) {\n    return 'Error: round 2 is active but empty';\n  }\n\n  if (data.isThirdRoundActive && !data.thirdRoundStart && !data.thirdRoundEnd) {\n    return 'Error: round 3 is active but empty';\n  }\n\n  return 'valid';\n};\n\nconst validateMintues = minutes => {\n  if (minutes < 1) {\n    return 'Please choose valid number';\n  }\n\n  if (minutes > 90) {\n    return \"Can't irrigate more then 90 minutes manually\";\n  }\n\n  return 'valid';\n};\n\nexport { validateWeek, validateMintues };","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/utils/Validate.js"],"names":["validateWeek","data","console","log","firstRoundStart","firstRoundEnd","secondRoundStart","secondRoundEnd","thirdRoundStart","thirdRoundEnd","isFirstRoundActive","isSecondRoundActive","isThirdRoundActive","validateMintues","minutes"],"mappings":"AAAA,MAAMA,YAAY,GAAIC,IAAD,IAAU;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,MACGA,IAAI,CAACG,eAAL,IAAwB,CAACH,IAAI,CAACI,aAA/B,IACC,CAACJ,IAAI,CAACG,eAAN,IAAyBH,IAAI,CAACI,aAFjC,EAGE;AACA,WAAO,oBAAP;AACD;;AACD,MACGJ,IAAI,CAACK,gBAAL,IAAyB,CAACL,IAAI,CAACM,cAAhC,IACC,CAACN,IAAI,CAACK,gBAAN,IAA0BL,IAAI,CAACM,cAFlC,EAGE;AACA,WAAO,oBAAP;AACD;;AACD,MACGN,IAAI,CAACO,eAAL,IAAwB,CAACP,IAAI,CAACQ,aAA/B,IACC,CAACR,IAAI,CAACO,eAAN,IAAyBP,IAAI,CAACQ,aAFjC,EAGE;AACA,WAAO,oBAAP;AACD;;AACD,MAAIR,IAAI,CAACG,eAAL,GAAuBH,IAAI,CAACI,aAAhC,EAA+C;AAC7C,WAAO,8CAAP;AACD;;AACD,MAAIJ,IAAI,CAACK,gBAAL,GAAwBL,IAAI,CAACM,cAAjC,EAAiD;AAC/C,WAAO,8CAAP;AACD;;AACD,MAAIN,IAAI,CAACO,eAAL,GAAuBP,IAAI,CAACQ,aAAhC,EAA+C;AAC7C,WAAO,8CAAP;AACD;;AACD,MAAIR,IAAI,CAACS,kBAAL,IAA2B,CAACT,IAAI,CAACG,eAAjC,IAAoD,CAACH,IAAI,CAACI,aAA9D,EAA6E;AAC3E,WAAO,oCAAP;AACD;;AACD,MACEJ,IAAI,CAACU,mBAAL,IACA,CAACV,IAAI,CAACK,gBADN,IAEA,CAACL,IAAI,CAACM,cAHR,EAIE;AACA,WAAO,oCAAP;AACD;;AACD,MAAIN,IAAI,CAACW,kBAAL,IAA2B,CAACX,IAAI,CAACO,eAAjC,IAAoD,CAACP,IAAI,CAACQ,aAA9D,EAA6E;AAC3E,WAAO,oCAAP;AACD;;AACD,SAAO,OAAP;AACD,CA3CD;;AA6CA,MAAMI,eAAe,GAAIC,OAAD,IAAa;AACnC,MAAIA,OAAO,GAAG,CAAd,EAAiB;AACf,WAAO,4BAAP;AACD;;AACD,MAAIA,OAAO,GAAG,EAAd,EAAkB;AAChB,WAAO,8CAAP;AACD;;AACD,SAAO,OAAP;AACD,CARD;;AAUA,SAASd,YAAT,EAAuBa,eAAvB","sourcesContent":["const validateWeek = (data) => {\n  console.log(data);\n  if (\n    (data.firstRoundStart && !data.firstRoundEnd) ||\n    (!data.firstRoundStart && data.firstRoundEnd)\n  ) {\n    return 'Round 1 is invalid';\n  }\n  if (\n    (data.secondRoundStart && !data.secondRoundEnd) ||\n    (!data.secondRoundStart && data.secondRoundEnd)\n  ) {\n    return 'Round 2 is invalid';\n  }\n  if (\n    (data.thirdRoundStart && !data.thirdRoundEnd) ||\n    (!data.thirdRoundStart && data.thirdRoundEnd)\n  ) {\n    return 'Round 3 is invalid';\n  }\n  if (data.firstRoundStart > data.firstRoundEnd) {\n    return 'Error in round 1: end time before start time';\n  }\n  if (data.secondRoundStart > data.secondRoundEnd) {\n    return 'Error in round 2: end time before start time';\n  }\n  if (data.thirdRoundStart > data.thirdRoundEnd) {\n    return 'Error in round 3: end time before start time';\n  }\n  if (data.isFirstRoundActive && !data.firstRoundStart && !data.firstRoundEnd) {\n    return 'Error: round 1 is active but empty';\n  }\n  if (\n    data.isSecondRoundActive &&\n    !data.secondRoundStart &&\n    !data.secondRoundEnd\n  ) {\n    return 'Error: round 2 is active but empty';\n  }\n  if (data.isThirdRoundActive && !data.thirdRoundStart && !data.thirdRoundEnd) {\n    return 'Error: round 3 is active but empty';\n  }\n  return 'valid';\n};\n\nconst validateMintues = (minutes) => {\n  if (minutes < 1) {\n    return 'Please choose valid number';\n  }\n  if (minutes > 90) {\n    return \"Can't irrigate more then 90 minutes manually\";\n  }\n  return 'valid';\n};\n\nexport { validateWeek, validateMintues };\n"]},"metadata":{},"sourceType":"module"}