{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/Tabs/Home.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-lone-blocks */\n\n/* eslint-disable no-unused-vars */\nimport React, { useContext, useState } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { UserContext } from '../providers/UserProvider'; // import WatermingButton from '../components/WateringButton';\n\nimport './Home.css';\nconst useStyles = makeStyles(theme => ({\n  listItem: {\n    backgroundColor: 'rgba(232, 241, 247, 0.795)',\n    cursor: 'unset',\n    borderRadius: '5px'\n  },\n  stopButton: {\n    backgroundColor: 'rgba(255, 172, 151, 0.795)',\n    padding: '0px',\n    textAlign: 'center',\n    marginLeft: '3px'\n  },\n  buttonAppear: {\n    animation: `$appear 1000ms`,\n    width: '64px'\n  },\n  buttonDisappear: {\n    animation: `$disappear 1000ms`,\n    width: '0px'\n  },\n  '@keyframes appear': {\n    '0%': {\n      width: '0px'\n    },\n    '80%': {\n      width: '100px'\n    },\n    '100%': {\n      width: '64px'\n    }\n  },\n  '@keyframes disappear': {\n    '0%': {\n      width: '64px'\n    },\n    '100%': {\n      width: '0px'\n    }\n  }\n}));\n\nconst Home = props => {\n  _s();\n\n  const user = useContext(UserContext);\n  const classes = useStyles();\n  const {\n    status,\n    errorMessage,\n    loader,\n    getStatus,\n    turnOffWatering\n  } = props;\n\n  const getHelloMessage = () => {\n    const today = new Date();\n    const curHr = today.getHours();\n\n    if (curHr < 12) {\n      return 'Good morning';\n    }\n\n    if (curHr < 18) {\n      return 'Good afternoon';\n    }\n\n    if (curHr < 21) {\n      return 'Good evening';\n    }\n\n    return 'Good night';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-header\",\n          children: `${getHelloMessage()} ${user.firstName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left-side\",\n            children: /*#__PURE__*/_jsxDEV(List, {\n              component: \"nav\",\n              \"aria-label\": \"main mailbox folders\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-list-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  className: \"list-item\",\n                  button: true,\n                  children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: `Status: ${status}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"status-error-message\",\n                    children: errorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: getStatus,\n                    children: loader ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                      size: 25\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 25\n                    }, this) : /*#__PURE__*/_jsxDEV(RefreshIcon, {\n                      style: {\n                        color: 'rgb(191 191 191 / 91%)'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  className: clsx(classes.listItem, classes.stopButton, // {\n                  //   [classes.buttonDisappear]: status === 'OFF',\n                  // },\n                  {\n                    [classes.buttonAppear]: status === 'ON'\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: turnOffWatering,\n                    children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                      primary: \"STOP\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                className: \"divider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                className: \"list-item\",\n                button: true,\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Next Irrigation:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Home, \"h0letZVpkJ50w+rCliMD1vmx20w=\", false, function () {\n  return [useStyles];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/Tabs/Home.js"],"names":["React","useContext","useState","CircularProgress","RefreshIcon","IconButton","List","ListItem","ListItemText","Divider","Button","makeStyles","clsx","UserContext","useStyles","theme","listItem","backgroundColor","cursor","borderRadius","stopButton","padding","textAlign","marginLeft","buttonAppear","animation","width","buttonDisappear","Home","props","user","classes","status","errorMessage","loader","getStatus","turnOffWatering","getHelloMessage","today","Date","curHr","getHours","firstName","color"],"mappings":";;;;;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,WAAT,QAA4B,2BAA5B,C,CAEA;;AACA,OAAO,YAAP;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAE,4BADT;AAERC,IAAAA,MAAM,EAAE,OAFA;AAGRC,IAAAA,YAAY,EAAE;AAHN,GAD6B;AAMvCC,EAAAA,UAAU,EAAE;AACVH,IAAAA,eAAe,EAAE,4BADP;AAEVI,IAAAA,OAAO,EAAE,KAFC;AAGVC,IAAAA,SAAS,EAAE,QAHD;AAIVC,IAAAA,UAAU,EAAE;AAJF,GAN2B;AAYvCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAG,gBADA;AAEZC,IAAAA,KAAK,EAAE;AAFK,GAZyB;AAgBvCC,EAAAA,eAAe,EAAE;AACfF,IAAAA,SAAS,EAAG,mBADG;AAEfC,IAAAA,KAAK,EAAE;AAFQ,GAhBsB;AAoBvC,uBAAqB;AACnB,UAAM;AACJA,MAAAA,KAAK,EAAE;AADH,KADa;AAInB,WAAO;AACLA,MAAAA,KAAK,EAAE;AADF,KAJY;AAOnB,YAAQ;AACNA,MAAAA,KAAK,EAAE;AADD;AAPW,GApBkB;AA+BvC,0BAAwB;AACtB,UAAM;AACJA,MAAAA,KAAK,EAAE;AADH,KADgB;AAItB,YAAQ;AACNA,MAAAA,KAAK,EAAE;AADD;AAJc;AA/Be,CAAZ,CAAD,CAA5B;;AAyCA,MAAME,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,IAAI,GAAG7B,UAAU,CAACY,WAAD,CAAvB;AACA,QAAMkB,OAAO,GAAGjB,SAAS,EAAzB;AACA,QAAM;AAAEkB,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA,MAAxB;AAAgCC,IAAAA,SAAhC;AAA2CC,IAAAA;AAA3C,MAA+DP,KAArE;;AAEA,QAAMQ,eAAe,GAAG,MAAM;AAC5B,UAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,UAAMC,KAAK,GAAGF,KAAK,CAACG,QAAN,EAAd;;AACA,QAAID,KAAK,GAAG,EAAZ,EAAgB;AACd,aAAO,cAAP;AACD;;AACD,QAAIA,KAAK,GAAG,EAAZ,EAAgB;AACd,aAAO,gBAAP;AACD;;AACD,QAAIA,KAAK,GAAG,EAAZ,EAAgB;AACd,aAAO,cAAP;AACD;;AACD,WAAO,YAAP;AACD,GAbD;;AAeA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,oBAAoC,GAAEH,eAAe,EAAG,IACtDP,IAAI,CAACY,SACN;AAFD;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,KAAhB;AAAsB,4BAAW,sBAAjC;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,qBAAf;AAAA,wCACE,QAAC,QAAD;AAAU,kBAAA,SAAS,EAAC,WAApB;AAAgC,kBAAA,MAAM,MAAtC;AAAA,0CACE,QAAC,YAAD;AAAc,oBAAA,OAAO,EAAG,WAAUV,MAAO;AAAzC;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AAAG,oBAAA,SAAS,EAAC,sBAAb;AAAA,8BAAqCC;AAArC;AAAA;AAAA;AAAA;AAAA,0BAFF,eAGE,QAAC,UAAD;AAAY,oBAAA,IAAI,EAAC,OAAjB;AAAyB,oBAAA,OAAO,EAAEE,SAAlC;AAAA,8BACGD,MAAM,gBACL,QAAC,gBAAD;AAAkB,sBAAA,IAAI,EAAE;AAAxB;AAAA;AAAA;AAAA;AAAA,4BADK,gBAGL,QAAC,WAAD;AACE,sBAAA,KAAK,EAAE;AAAES,wBAAAA,KAAK,EAAE;AAAT;AADT;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,0BAHF;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAcE,QAAC,QAAD;AACE,kBAAA,SAAS,EAAE/B,IAAI,CACbmB,OAAO,CAACf,QADK,EAEbe,OAAO,CAACX,UAFK,EAGb;AACA;AACA;AACA;AACE,qBAACW,OAAO,CAACP,YAAT,GAAwBQ,MAAM,KAAK;AADrC,mBANa,CADjB;AAAA,yCAYE,QAAC,MAAD;AAAQ,oBAAA,OAAO,EAAEI,eAAjB;AAAA,2CACE,QAAC,YAAD;AAAc,sBAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,wBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAgCE,QAAC,OAAD;AAAS,gBAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,sBAhCF,eAiCE,QAAC,QAAD;AAAU,gBAAA,SAAS,EAAC,WAApB;AAAgC,gBAAA,MAAM,MAAtC;AAAA,uCACE,QAAC,YAAD;AAAc,kBAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAjCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkFD,CAtGD;;GAAMR,I;UAEYd,S;;;KAFZc,I;AAwGN,eAAeA,IAAf","sourcesContent":["/* eslint-disable no-lone-blocks */\n/* eslint-disable no-unused-vars */\nimport React, { useContext, useState } from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nimport { UserContext } from '../providers/UserProvider';\n\n// import WatermingButton from '../components/WateringButton';\nimport './Home.css';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    backgroundColor: 'rgba(232, 241, 247, 0.795)',\n    cursor: 'unset',\n    borderRadius: '5px',\n  },\n  stopButton: {\n    backgroundColor: 'rgba(255, 172, 151, 0.795)',\n    padding: '0px',\n    textAlign: 'center',\n    marginLeft: '3px',\n  },\n  buttonAppear: {\n    animation: `$appear 1000ms`,\n    width: '64px',\n  },\n  buttonDisappear: {\n    animation: `$disappear 1000ms`,\n    width: '0px',\n  },\n  '@keyframes appear': {\n    '0%': {\n      width: '0px',\n    },\n    '80%': {\n      width: '100px',\n    },\n    '100%': {\n      width: '64px',\n    },\n  },\n  '@keyframes disappear': {\n    '0%': {\n      width: '64px',\n    },\n    '100%': {\n      width: '0px',\n    },\n  },\n}));\n\nconst Home = (props) => {\n  const user = useContext(UserContext);\n  const classes = useStyles();\n  const { status, errorMessage, loader, getStatus, turnOffWatering } = props;\n\n  const getHelloMessage = () => {\n    const today = new Date();\n    const curHr = today.getHours();\n    if (curHr < 12) {\n      return 'Good morning';\n    }\n    if (curHr < 18) {\n      return 'Good afternoon';\n    }\n    if (curHr < 21) {\n      return 'Good evening';\n    }\n    return 'Good night';\n  };\n\n  return (\n    <>\n      <div className=\"main-body\">\n        <div className=\"container\">\n          <div className=\"container-header\">{`${getHelloMessage()} ${\n            user.firstName\n          }`}</div>\n          <div className=\"container-body\">\n            <div className=\"left-side\">\n              <List component=\"nav\" aria-label=\"main mailbox folders\">\n                <div className=\"status-list-wrapper\">\n                  <ListItem className=\"list-item\" button>\n                    <ListItemText primary={`Status: ${status}`} />\n                    <p className=\"status-error-message\">{errorMessage}</p>\n                    <IconButton size=\"small\" onClick={getStatus}>\n                      {loader ? (\n                        <CircularProgress size={25} />\n                      ) : (\n                        <RefreshIcon\n                          style={{ color: 'rgb(191 191 191 / 91%)' }}\n                        />\n                      )}\n                    </IconButton>\n                  </ListItem>\n                  <ListItem\n                    className={clsx(\n                      classes.listItem,\n                      classes.stopButton,\n                      // {\n                      //   [classes.buttonDisappear]: status === 'OFF',\n                      // },\n                      {\n                        [classes.buttonAppear]: status === 'ON',\n                      },\n                    )}\n                  >\n                    <Button onClick={turnOffWatering}>\n                      <ListItemText primary=\"STOP\" />\n                    </Button>\n                  </ListItem>\n                </div>\n                <Divider className=\"divider\" />\n                <ListItem className=\"list-item\" button>\n                  <ListItemText primary=\"Next Irrigation:\" />\n                </ListItem>\n              </List>\n              {/* <div className=\"status-text-wrapper\">\n              <p className=\"status-text\">{`Status: ${status}`}</p>\n              <IconButton size=\"small\">\n                <RefreshIcon />\n              </IconButton>\n            </div> */}\n\n              {/* <WatermingButton\n              isBreathing={isBreathing}\n              textButton={\n                isSubmitDisabled ? (\n                  <CircularProgress className=\"status-loader\" size=\"10\" />\n                ) : (\n                  <RefreshIcon fontSize=\"large\" style={{ color: '#cecbcb' }} />\n                )\n              }\n              isSubmitDisabled={isSubmitDisabled}\n              onClick={getStatus}\n            /> */}\n              {/* <p className=\"status-error-message\">{errorMessage}</p> */}\n            </div>\n          </div>\n        </div>\n        {/* <hr orientation=\"vertical\" />\n        <div className=\"container right\">\n          <div className=\"container-header\">Watering status</div>\n          <div className=\"container-body\">\n            <div className=\"current-status-wrapper\">\n              <p className=\"current-status\">Currently:{` ${status}`}</p>\n            </div>\n            <p className=\"status-error-message\">{errorMessage}</p>\n          </div>\n        </div> */}\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}