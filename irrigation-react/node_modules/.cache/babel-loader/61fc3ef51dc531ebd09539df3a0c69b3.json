{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/Tabs/Manual.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-console */\n\n/* eslint-disable no-unused-expressions */\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './Manual.css';\n\nfunction Manual(props) {\n  _s();\n\n  const [textButton, setTextColor] = useState('START');\n  const [minutes, setMinutes] = useState();\n  const [loading, setLoading] = useState('determinate');\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(false);\n  const {\n    user\n  } = props;\n\n  const clickButton = event => {\n    event.preventDefault();\n    setLoading('indeterminate');\n    setIsSubmitDisabled(true);\n\n    if (textButton === 'START') {\n      axios.post(`${user.data().dataplicity}/irrigate_by_minutes/${minutes}`) // DO NOT KIP 1 MINUTE HARDCODED!!\n      .then(() => {\n        setTextColor('STOP');\n        console.log('irrigation started');\n      }).catch(error => {\n        console.log(error);\n      });\n    } else {\n      axios.post(`${user.data().dataplicity}/stop_irrigate`).then(() => {\n        setTextColor('START');\n        console.log('irrigation stopped');\n      }).catch(error => {\n        console.log(error);\n        console.log(\"IRRIGATION DIDN'T STOPPTED!!!\");\n      });\n    }\n\n    setLoading('determinate');\n    setIsSubmitDisabled(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"manual-irrigation-form\",\n    onSubmit: clickButton,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"minutes-input-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"number\",\n        id: \"minutes-input\",\n        label: \"Minutes\",\n        variant: \"outlined\",\n        value: minutes,\n        required: true,\n        onChange: event => {\n          setMinutes(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"breathing-button-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        id: \"breathing-button\",\n        className: \"manual-button\",\n        variant: \"contained\",\n        color: textButton === 'START' ? 'primary' : 'secondary',\n        type: \"submit\",\n        disabled: isSubmitDisabled,\n        children: textButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        className: \"loader\",\n        variant: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Manual, \"nCHhVA9bg2582NSfZczOkk5Zuf4=\");\n\n_c = Manual;\nexport default Manual;\n\nvar _c;\n\n$RefreshReg$(_c, \"Manual\");","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/Tabs/Manual.js"],"names":["React","useState","TextField","Button","axios","CircularProgress","Manual","props","textButton","setTextColor","minutes","setMinutes","loading","setLoading","isSubmitDisabled","setIsSubmitDisabled","user","clickButton","event","preventDefault","post","data","dataplicity","then","console","log","catch","error","target","value"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-unused-expressions */\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './Manual.css';\n\nfunction Manual(props) {\n  const [textButton, setTextColor] = useState('START');\n  const [minutes, setMinutes] = useState();\n  const [loading, setLoading] = useState('determinate');\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(false);\n\n  const { user } = props;\n\n  const clickButton = (event) => {\n    event.preventDefault();\n    setLoading('indeterminate');\n    setIsSubmitDisabled(true);\n    if (textButton === 'START') {\n      axios\n        .post(`${user.data().dataplicity}/irrigate_by_minutes/${minutes}`) // DO NOT KIP 1 MINUTE HARDCODED!!\n        .then(() => {\n          setTextColor('STOP');\n          console.log('irrigation started');\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      axios\n        .post(`${user.data().dataplicity}/stop_irrigate`)\n        .then(() => {\n          setTextColor('START');\n          console.log('irrigation stopped');\n        })\n        .catch((error) => {\n          console.log(error);\n          console.log(\"IRRIGATION DIDN'T STOPPTED!!!\");\n        });\n    }\n    setLoading('determinate');\n    setIsSubmitDisabled(true);\n  };\n\n  return (\n    <form className=\"manual-irrigation-form\" onSubmit={clickButton}>\n      <div className=\"minutes-input-wrapper\">\n        <TextField\n          type=\"number\"\n          id=\"minutes-input\"\n          label=\"Minutes\"\n          variant=\"outlined\"\n          value={minutes}\n          required\n          onChange={(event) => {\n            setMinutes(event.target.value);\n          }}\n        />\n      </div>\n      <div className=\"breathing-button-wrapper\">\n        <Button\n          id=\"breathing-button\"\n          className=\"manual-button\"\n          variant=\"contained\"\n          color={textButton === 'START' ? 'primary' : 'secondary'}\n          type=\"submit\"\n          disabled={isSubmitDisabled}\n        >\n          {textButton}\n        </Button>\n      </div>\n      <div className=\"loader-wrapper\">\n        <CircularProgress className=\"loader\" variant={loading} />\n      </div>\n    </form>\n  );\n}\n\nexport default Manual;\n"]},"metadata":{},"sourceType":"module"}