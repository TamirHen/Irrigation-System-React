{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/model/Popup.js\";\nimport React from \"react\";\nimport ReactModalLogin from \"react-modal-login\";\nimport { auth, firestore } from '../utils/Firebase';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './Popup.css';\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: true,\n      loading: false,\n      error: null\n    };\n  }\n\n  openModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      showModal: false,\n      error: null\n    }); // this.finishLoading();\n  }\n\n  onLogin() {\n    this.startLoading();\n    const db = firestore;\n    const email = document.querySelector('#email-login').value;\n    const password = document.querySelector('#password-login').value;\n    this.setState({\n      error: null\n    });\n    auth.signInWithEmailAndPassword(email, password).then(cred => {\n      db.collection(\"users\").doc(email).get().then(user => {\n        if (user.exists) {\n          axios.get(`${user.data()[\"dataplicity\"]}/get_week`).then(response => {\n            console.log(\"login successfully\");\n            this.closeModal();\n            this.props.callback(response.data);\n          }).catch(error => {\n            console.log(error);\n          });\n        } else {\n          console.log(\"No such document\");\n          this.errorHandler();\n        }\n      }).catch(function (error) {\n        console.log(\"Error getting document:\", error);\n        this.errorHandler();\n      });\n    }, err => {\n      this.errorHandler();\n    });\n  }\n\n  onRegister() {\n    this.startLoading();\n    const db = firestore;\n    const email = document.querySelector('#email-signup').value;\n    const password = document.querySelector('#password-signup').value;\n    const urlCode = document.querySelector('#urlCode-signup').value;\n    this.setState({\n      error: null\n    });\n    auth.createUserWithEmailAndPassword(email, password).then(cred => {\n      db.collection(\"users\").doc(email).set({\n        dataplicity: urlCode\n      }); // Needs to override error message when user signup successfully but could't connect to the pi.\n\n      axios.get(`${urlCode}/get_week`).then(response => {\n        console.log(\"signed up and connected to pi successfully\");\n        this.closeModal();\n        this.props.callback(response.data);\n      }).catch(error => {\n        console.log(error);\n        console.log(\"Sing up successfully, there was a problem with the connection to the pi.\");\n        this.errorHandler();\n      });\n    }, err => {\n      this.errorHandler();\n    });\n  }\n\n  startLoading() {\n    this.setState({\n      loading: true\n    });\n  }\n\n  finishLoading() {\n    this.setState({\n      loading: false\n    });\n  }\n\n  afterTabsChange() {\n    this.setState({\n      error: null\n    });\n  }\n\n  errorHandler() {\n    this.setState({\n      error: true\n    });\n    this.finishLoading();\n  }\n\n  render() {\n    if (this.props.type === \"login\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(ReactModalLogin, {\n            visible: this.state.showModal //   onCloseModal={this.closeModal.bind(this)}\n            ,\n            loading: this.state.loading,\n            error: this.state.error,\n            tabs: {\n              afterChange: this.afterTabsChange.bind(this)\n            },\n            loginError: {\n              // containerClass: \"error-message\",\n              label: \"Couldn't sign in, please try again.\"\n            },\n            registerError: {\n              // containerClass: \"error-message\",\n              label: \"Couldn't sign up, please try again.\"\n            },\n            startLoading: this.startLoading.bind(this),\n            finishLoading: this.finishLoading.bind(this),\n            closeBtn: {\n              containerClass: \"close-button\"\n            },\n            form: {\n              loginInputs: [{\n                // containerClass: \"popup-input-wrapper\",\n                id: \"email-login\",\n                type: \"email\",\n                // inputClass: \"popup-input\",\n                name: \"Email\",\n                label: \"Email\"\n              }, {\n                // containerClass: \"popup-input-wrapper\",\n                id: \"password-login\",\n                type: \"password\",\n                // inputClass: \"popup-input\",\n                name: \"Password\",\n                label: \"Password\"\n              }],\n              registerInputs: [{\n                // containerClass: \"popup-input-wrapper\",\n                id: \"email-signup\",\n                type: \"email\",\n                // inputClass: \"popup-input\",\n                name: \"Email\",\n                label: \"Email\"\n              }, {\n                // containerClass: \"popup-input-wrapper\",\n                id: \"password-signup\",\n                type: \"password\",\n                // inputClass: \"popup-input\",\n                name: \"Password\",\n                label: \"Password\"\n              }, {\n                // containerClass: \"popup-input-wrapper\",\n                id: \"urlCode-signup\",\n                type: \"text\",\n                // inputClass: \"popup-input\",\n                name: \"URL Code\",\n                label: \"URL Code\"\n              }],\n              loginBtn: {\n                label: \"Sign in\"\n              },\n              registerBtn: {\n                label: \"Sign up\"\n              },\n              onLogin: this.onLogin.bind(this),\n              onRegister: this.onRegister.bind(this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ReactModalLogin, {\n          visible: this.state.showModal,\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n            className: \"loader\",\n            variant: this.state.loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default Popup;","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/model/Popup.js"],"names":["React","ReactModalLogin","auth","firestore","axios","CircularProgress","Popup","Component","constructor","props","state","showModal","loading","error","openModal","setState","closeModal","onLogin","startLoading","db","email","document","querySelector","value","password","signInWithEmailAndPassword","then","cred","collection","doc","get","user","exists","data","response","console","log","callback","catch","errorHandler","err","onRegister","urlCode","createUserWithEmailAndPassword","set","dataplicity","finishLoading","afterTabsChange","render","type","afterChange","bind","label","containerClass","loginInputs","id","name","registerInputs","loginBtn","registerBtn"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactModalLogin from \"react-modal-login\";\nimport { auth, firestore } from '../utils/Firebase';\nimport axios from 'axios';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport './Popup.css';\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      showModal: true,\n      loading: false,\n      error: null\n    };\n  }\n\n \n  openModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n \n  closeModal() {\n    this.setState({\n      showModal: false,\n      error: null\n    });\n    // this.finishLoading();\n  }\n\n  onLogin() {\n    this.startLoading();\n    const db = firestore;\n    const email = document.querySelector('#email-login').value;\n    const password = document.querySelector('#password-login').value;\n\n    this.setState({\n      error: null\n    });\n\n    auth.signInWithEmailAndPassword(email, password).then(cred => {\n      db.collection(\"users\").doc(email).get().then(user => {\n        if (user.exists) {\n            axios.get(`${user.data()[\"dataplicity\"]}/get_week`).then(response => {\n              console.log(\"login successfully\")\n              this.closeModal();\n              this.props.callback(response.data);\n            }).catch(error => {\n              console.log(error);\n            })\n        } else {\n            console.log(\"No such document\");\n            this.errorHandler();\n        }\n    }).catch(function(error) {\n        console.log(\"Error getting document:\", error);\n        this.errorHandler();\n    });\n    }, err => {\n      this.errorHandler();\n    });\n  }\n\n  onRegister() {\n    this.startLoading();\n    const db = firestore;\n    const email = document.querySelector('#email-signup').value;\n    const password = document.querySelector('#password-signup').value;\n    const urlCode = document.querySelector('#urlCode-signup').value;\n\n    this.setState({\n      error: null\n    });\n\n    auth.createUserWithEmailAndPassword(email, password).then(cred => {\n      db.collection(\"users\").doc(email).set({\n        dataplicity: urlCode\n      });\n\n      // Needs to override error message when user signup successfully but could't connect to the pi.\n      axios.get(`${urlCode}/get_week`).then(response => {\n        console.log(\"signed up and connected to pi successfully\")\n        this.closeModal();\n        this.props.callback(response.data);\n      }).catch(error => {\n        console.log(error);\n        console.log(\"Sing up successfully, there was a problem with the connection to the pi.\");\n        this.errorHandler();\n      });  \n\n    }, err => {\n      this.errorHandler();\n    });\n\n  }\n\n  \n  startLoading() {\n    this.setState({\n      loading: true\n    });\n  }\n \n  finishLoading() {\n    this.setState({\n      loading: false\n    });\n  }\n \n  afterTabsChange() {\n    this.setState({\n      error: null\n    });\n  }\n\n  errorHandler() {\n    this.setState({\n      error: true\n    });\n    this.finishLoading();\n  }\n \n  render() {\n    if (this.props.type === \"login\") {\n      return (\n        <div>\n          <React.Fragment>\n            <ReactModalLogin\n              visible={this.state.showModal}\n            //   onCloseModal={this.closeModal.bind(this)}\n              loading={this.state.loading}\n              error={this.state.error}\n              tabs={{\n                afterChange: this.afterTabsChange.bind(this)\n              }}\n              loginError={{\n                // containerClass: \"error-message\",\n                label: \"Couldn't sign in, please try again.\",\n              }}\n              registerError={{\n                // containerClass: \"error-message\",\n                label: \"Couldn't sign up, please try again.\",\n              }}\n              startLoading={this.startLoading.bind(this)}\n              finishLoading={this.finishLoading.bind(this)}\n              closeBtn={{\n                containerClass: \"close-button\"\n              }}\n              form={{\n                loginInputs: [\n                    {\n                        // containerClass: \"popup-input-wrapper\",\n                        id: \"email-login\",\n                        type: \"email\",\n                        // inputClass: \"popup-input\",\n                        name: \"Email\",\n                        label: \"Email\"\n                    },\n                    {\n                        // containerClass: \"popup-input-wrapper\",\n                        id: \"password-login\",\n                        type: \"password\",\n                        // inputClass: \"popup-input\",\n                        name: \"Password\",\n                        label: \"Password\"\n                    }\n                ],\n                registerInputs: [\n                    {\n                        // containerClass: \"popup-input-wrapper\",\n                        id: \"email-signup\",\n                        type: \"email\",\n                        // inputClass: \"popup-input\",\n                        name: \"Email\",\n                        label: \"Email\"\n                    },\n                    {\n                        // containerClass: \"popup-input-wrapper\",\n                        id: \"password-signup\",\n                        type: \"password\",\n                        // inputClass: \"popup-input\",\n                        name: \"Password\",\n                        label: \"Password\"\n                    },\n                    {\n                        // containerClass: \"popup-input-wrapper\",\n                        id: \"urlCode-signup\",\n                        type: \"text\",\n                        // inputClass: \"popup-input\",\n                        name: \"URL Code\",\n                        label: \"URL Code\",\n                    }\n                ],\n  \n                loginBtn: {\n                    label: \"Sign in\"\n                },\n                registerBtn: {\n                    label: \"Sign up\"\n                },\n                onLogin: this.onLogin.bind(this),\n                onRegister: this.onRegister.bind(this)\n              }}\n            />\n          </React.Fragment>\n        </div>\n      );\n    }\n    else {\n      return (\n        <div>\n          <ReactModalLogin visible={this.state.showModal}>\n            <CircularProgress\n              className=\"loader\"\n              variant={this.state.loading}\n            />\n          </ReactModalLogin>\n        </div>\n      )\n    }\n  }\n}\n\nexport default Popup;"]},"metadata":{},"sourceType":"module"}