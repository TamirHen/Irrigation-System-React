{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/pages/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { validateWeek } from '../utils/Validate';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport axios from 'axios';\nimport { firestore } from '../utils/Firebase';\nimport Popup from '../model/Popup';\nimport Day from \"../components/Day\";\nimport Cycle from '../components/Cycle';\nimport './MainPage.css';\nlet userEmail = \"\";\n\nconst MainPage = () => {\n  _s();\n\n  const [loading, setLoading] = useState(\"determinate\");\n  const [submitMessage, setSubmitMessage] = useState(\"\");\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(false);\n  const [textColor, setTextColor] = useState(\"red\");\n  const [week, setWeek] = useState({\n    sunday: false,\n    monday: false,\n    tuesday: false,\n    wednesday: false,\n    thursday: false,\n    friday: false,\n    saturday: false\n  });\n  const [rounds, setRounds] = useState({\n    round1: {\n      isActive: false,\n      startTime: null,\n      endTime: null\n    },\n    round2: {\n      isActive: false,\n      startTime: null,\n      endTime: null\n    },\n    round3: {\n      isActive: false,\n      startTime: null,\n      endTime: null\n    }\n  });\n\n  const updateRound = (round, propToUpdate, state) => {\n    let updatedRound = rounds[round];\n    updatedRound[propToUpdate] = state;\n    let updatedRounds = { ...rounds\n    };\n    updatedRounds[round] = updatedRound;\n    setRounds(updatedRounds);\n  };\n\n  const updateDay = (day, state) => {\n    let updatedWeek = { ...week\n    };\n    updatedWeek[day] = state;\n    setWeek(updatedWeek);\n  };\n\n  const setData = (email, userData) => {\n    userEmail = email;\n    setWeek({\n      sunday: userData.sunday,\n      monday: userData.monday,\n      tuesday: userData.tuesday,\n      wednesday: userData.wednesday,\n      thursday: userData.thursday,\n      friday: userData.friday,\n      saturday: userData.saturday\n    });\n    setRounds({\n      round1: {\n        isActive: userData.isFirstRoundActive,\n        startTime: userData.firstRoundStart,\n        endTime: userData.firstRoundEnd\n      },\n      round2: {\n        isActive: userData.isSecondRoundActive,\n        startTime: userData.secondRoundStart,\n        endTime: userData.secondRoundEnd\n      },\n      round3: {\n        isActive: userData.isThirdRoundActive,\n        startTime: userData.thirdRoundStart,\n        endTime: userData.thirdRoundEnd\n      }\n    });\n  };\n\n  const setMessage = message => {\n    setLoading(\"determinate\");\n\n    if (message === \"Done\") {\n      setTextColor(\"green\");\n    } else {\n      setTextColor(\"red\");\n    }\n\n    setSubmitMessage(message);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    setIsSubmitDisabled(true);\n    setMessage(\"\");\n    setLoading(\"indeterminate\");\n    const db = firestore;\n    const data = { ...week,\n      \"firstRoundStart\": rounds.round1.startTime ? `${rounds.round1.startTime.split(\":\")[0]}:${rounds.round1.startTime.split(\":\")[1]}:00` : null,\n      \"firstRoundEnd\": rounds.round1.endTime ? `${rounds.round1.endTime.split(\":\")[0]}:${rounds.round1.endTime.split(\":\")[1]}:00` : null,\n      \"secondRoundStart\": rounds.round2.startTime ? `${rounds.round2.startTime.split(\":\")[0]}:${rounds.round2.startTime.split(\":\")[1]}:00` : null,\n      \"secondRoundEnd\": rounds.round2.endTime ? `${rounds.round2.endTime.split(\":\")[0]}:${rounds.round2.endTime.split(\":\")[1]}:00` : null,\n      \"thirdRoundStart\": rounds.round3.startTime ? `${rounds.round3.startTime.split(\":\")[0]}:${rounds.round3.startTime.split(\":\")[1]}:00` : null,\n      \"thirdRoundEnd\": rounds.round3.endTime ? `${rounds.round3.endTime.split(\":\")[0]}:${rounds.round3.endTime.split(\":\")[1]}:00` : null,\n      \"isFirstRoundActive\": rounds.round1.isActive,\n      \"isSecondRoundActive\": rounds.round2.isActive,\n      \"isThirdRoundActive\": rounds.round3.isActive\n    };\n    const validationMessage = validateWeek(data);\n\n    if (validationMessage === \"valid\") {\n      db.collection(\"users\").doc(\"tamirhen6@gmail.com\").get().then(user => {\n        axios.post(`${user.data()[\"dataplicity\"]}/update_week`, data).then(response => {\n          console.log(\"data updated successfully\");\n          setMessage(\"Done\");\n          setIsSubmitDisabled(false);\n        }).catch(error => {\n          console.log(error);\n          setMessage(\"Connection error, please try again later\");\n          setIsSubmitDisabled(false);\n        });\n      }).catch(error => {\n        console.log(error);\n        setMessage(\"Connection error, please try again later\");\n        setIsSubmitDisabled(false);\n      });\n    } else {\n      setMessage(validationMessage);\n      setIsSubmitDisabled(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Popup, {\n      setData: setData\n    }, \"popup\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Home Irrigation System\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"main-form\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-object-wrapper\",\n            children: Object.keys(rounds).map((keyName, keyIndex) => {\n              return /*#__PURE__*/_jsxDEV(Cycle, {\n                isActive: rounds[keyName].isActive,\n                cycleNumber: keyIndex + 1,\n                startTime: rounds[keyName].startTime,\n                endTime: rounds[keyName].endTime,\n                updateRound: updateRound\n              }, keyName + rounds[keyName].isActive, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-object-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"week-list\",\n              children: Object.keys(week).map((keyName, keyIndex) => {\n                return /*#__PURE__*/_jsxDEV(Day, {\n                  day: keyName,\n                  state: week[keyName],\n                  updateDay: updateDay\n                }, keyName + week[keyName], false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 40\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Submit-button-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            children: \"One Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            type: \"submit\",\n            disabled: isSubmitDisabled,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loader-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"submit-message\",\n            style: {\n              color: textColor\n            },\n            children: submitMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n            className: \"loader\",\n            variant: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 7\n  }, this);\n};\n\n_s(MainPage, \"ERdkFeh3x/4CgCv9NkUYxvFklp0=\");\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/pages/MainPage.js"],"names":["React","useState","validateWeek","Button","CircularProgress","axios","firestore","Popup","Day","Cycle","userEmail","MainPage","loading","setLoading","submitMessage","setSubmitMessage","isSubmitDisabled","setIsSubmitDisabled","textColor","setTextColor","week","setWeek","sunday","monday","tuesday","wednesday","thursday","friday","saturday","rounds","setRounds","round1","isActive","startTime","endTime","round2","round3","updateRound","round","propToUpdate","state","updatedRound","updatedRounds","updateDay","day","updatedWeek","setData","email","userData","isFirstRoundActive","firstRoundStart","firstRoundEnd","isSecondRoundActive","secondRoundStart","secondRoundEnd","isThirdRoundActive","thirdRoundStart","thirdRoundEnd","setMessage","message","onSubmit","event","preventDefault","db","data","split","validationMessage","collection","doc","get","then","user","post","response","console","log","catch","error","Object","keys","map","keyName","keyIndex","color"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,OAAO,gBAAP;AAEA,IAAIC,SAAS,GAAG,EAAhB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,aAAD,CAAtC;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACe,gBAAD,EAAmBC,mBAAnB,IAA0ChB,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC;AAC7BqB,IAAAA,MAAM,EAAE,KADqB;AAE7BC,IAAAA,MAAM,EAAE,KAFqB;AAG7BC,IAAAA,OAAO,EAAE,KAHoB;AAI7BC,IAAAA,SAAS,EAAE,KAJkB;AAK7BC,IAAAA,QAAQ,EAAE,KALmB;AAM7BC,IAAAA,MAAM,EAAE,KANqB;AAO7BC,IAAAA,QAAQ,EAAE;AAPmB,GAAD,CAAhC;AAUA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB7B,QAAQ,CAAC;AACjC8B,IAAAA,MAAM,EAAE;AACJC,MAAAA,QAAQ,EAAE,KADN;AAEJC,MAAAA,SAAS,EAAE,IAFP;AAGJC,MAAAA,OAAO,EAAE;AAHL,KADyB;AAMjCC,IAAAA,MAAM,EAAE;AACJH,MAAAA,QAAQ,EAAE,KADN;AAEJC,MAAAA,SAAS,EAAE,IAFP;AAGJC,MAAAA,OAAO,EAAE;AAHL,KANyB;AAWjCE,IAAAA,MAAM,EAAE;AACJJ,MAAAA,QAAQ,EAAE,KADN;AAEJC,MAAAA,SAAS,EAAE,IAFP;AAGJC,MAAAA,OAAO,EAAE;AAHL;AAXyB,GAAD,CAApC;;AAkBA,QAAMG,WAAW,GAAG,CAACC,KAAD,EAAQC,YAAR,EAAsBC,KAAtB,KAAgC;AAChD,QAAIC,YAAY,GAAGZ,MAAM,CAACS,KAAD,CAAzB;AAEAG,IAAAA,YAAY,CAACF,YAAD,CAAZ,GAA6BC,KAA7B;AACA,QAAIE,aAAa,GAAG,EAAC,GAAGb;AAAJ,KAApB;AACAa,IAAAA,aAAa,CAACJ,KAAD,CAAb,GAAuBG,YAAvB;AACAX,IAAAA,SAAS,CAACY,aAAD,CAAT;AACH,GAPD;;AASA,QAAMC,SAAS,GAAG,CAACC,GAAD,EAAMJ,KAAN,KAAgB;AAC9B,QAAIK,WAAW,GAAG,EAAC,GAAGzB;AAAJ,KAAlB;AACAyB,IAAAA,WAAW,CAACD,GAAD,CAAX,GAAmBJ,KAAnB;AACAnB,IAAAA,OAAO,CAACwB,WAAD,CAAP;AACH,GAJD;;AAMA,QAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACjCtC,IAAAA,SAAS,GAAGqC,KAAZ;AAEA1B,IAAAA,OAAO,CAAC;AACJC,MAAAA,MAAM,EAAE0B,QAAQ,CAAC1B,MADb;AAEJC,MAAAA,MAAM,EAAEyB,QAAQ,CAACzB,MAFb;AAGJC,MAAAA,OAAO,EAAEwB,QAAQ,CAACxB,OAHd;AAIJC,MAAAA,SAAS,EAAEuB,QAAQ,CAACvB,SAJhB;AAKJC,MAAAA,QAAQ,EAAEsB,QAAQ,CAACtB,QALf;AAMJC,MAAAA,MAAM,EAAEqB,QAAQ,CAACrB,MANb;AAOJC,MAAAA,QAAQ,EAAEoB,QAAQ,CAACpB;AAPf,KAAD,CAAP;AAWAE,IAAAA,SAAS,CAAC;AACNC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEgB,QAAQ,CAACC,kBADf;AAEJhB,QAAAA,SAAS,EAAEe,QAAQ,CAACE,eAFhB;AAGJhB,QAAAA,OAAO,EAAEc,QAAQ,CAACG;AAHd,OADF;AAMNhB,MAAAA,MAAM,EAAE;AACJH,QAAAA,QAAQ,EAAEgB,QAAQ,CAACI,mBADf;AAEJnB,QAAAA,SAAS,EAAEe,QAAQ,CAACK,gBAFhB;AAGJnB,QAAAA,OAAO,EAAEc,QAAQ,CAACM;AAHd,OANF;AAWNlB,MAAAA,MAAM,EAAE;AACJJ,QAAAA,QAAQ,EAAEgB,QAAQ,CAACO,kBADf;AAEJtB,QAAAA,SAAS,EAAEe,QAAQ,CAACQ,eAFhB;AAGJtB,QAAAA,OAAO,EAAEc,QAAQ,CAACS;AAHd;AAXF,KAAD,CAAT;AAiBH,GA/BD;;AAiCA,QAAMC,UAAU,GAAIC,OAAD,IAAa;AAC5B9C,IAAAA,UAAU,CAAC,aAAD,CAAV;;AACA,QAAI8C,OAAO,KAAK,MAAhB,EAAwB;AACpBxC,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACH,KAFD,MAGK;AACDA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;;AACDJ,IAAAA,gBAAgB,CAAC4C,OAAD,CAAhB;AACH,GATD;;AAWA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACC,cAAN;AACA7C,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAyC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACA7C,IAAAA,UAAU,CAAC,eAAD,CAAV;AACA,UAAMkD,EAAE,GAAGzD,SAAX;AAEA,UAAM0D,IAAI,GAAG,EACT,GAAG5C,IADM;AAET,yBAAkBS,MAAM,CAACE,MAAP,CAAcE,SAAd,GAA2B,GAAEJ,MAAM,CAACE,MAAP,CAAcE,SAAd,CAAwBgC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAAsC,IAAGpC,MAAM,CAACE,MAAP,CAAcE,SAAd,CAAwBgC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAAsC,KAA5G,GAAmH,IAF5H;AAGT,uBAAgBpC,MAAM,CAACE,MAAP,CAAcG,OAAd,GAAyB,GAAEL,MAAM,CAACE,MAAP,CAAcG,OAAd,CAAsB+B,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAoC,IAAGpC,MAAM,CAACE,MAAP,CAAcG,OAAd,CAAsB+B,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAoC,KAAtG,GAA6G,IAHpH;AAIT,0BAAmBpC,MAAM,CAACM,MAAP,CAAcF,SAAd,GAA2B,GAAEJ,MAAM,CAACM,MAAP,CAAcF,SAAd,CAAwBgC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAAsC,IAAGpC,MAAM,CAACM,MAAP,CAAcF,SAAd,CAAwBgC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAAsC,KAA5G,GAAmH,IAJ7H;AAKT,wBAAiBpC,MAAM,CAACM,MAAP,CAAcD,OAAd,GAAyB,GAAEL,MAAM,CAACM,MAAP,CAAcD,OAAd,CAAsB+B,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAoC,IAAGpC,MAAM,CAACM,MAAP,CAAcD,OAAd,CAAsB+B,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAoC,KAAtG,GAA6G,IALrH;AAMT,yBAAkBpC,MAAM,CAACO,MAAP,CAAcH,SAAd,GAA2B,GAAEJ,MAAM,CAACO,MAAP,CAAcH,SAAd,CAAwBgC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAAsC,IAAGpC,MAAM,CAACO,MAAP,CAAcH,SAAd,CAAwBgC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CAAsC,KAA5G,GAAmH,IAN5H;AAOT,uBAAgBpC,MAAM,CAACO,MAAP,CAAcF,OAAd,GAAyB,GAAEL,MAAM,CAACO,MAAP,CAAcF,OAAd,CAAsB+B,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAoC,IAAGpC,MAAM,CAACO,MAAP,CAAcF,OAAd,CAAsB+B,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAoC,KAAtG,GAA6G,IAPpH;AAQT,4BAAqBpC,MAAM,CAACE,MAAP,CAAcC,QAR1B;AAST,6BAAsBH,MAAM,CAACM,MAAP,CAAcH,QAT3B;AAUT,4BAAqBH,MAAM,CAACO,MAAP,CAAcJ;AAV1B,KAAb;AAaA,UAAMkC,iBAAiB,GAAGhE,YAAY,CAAC8D,IAAD,CAAtC;;AAEA,QAAIE,iBAAiB,KAAK,OAA1B,EAAmC;AAC/BH,MAAAA,EAAE,CAACI,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2B,qBAA3B,EAAkDC,GAAlD,GAAwDC,IAAxD,CAA6DC,IAAI,IAAI;AACjElE,QAAAA,KAAK,CAACmE,IAAN,CAAY,GAAED,IAAI,CAACP,IAAL,GAAY,aAAZ,CAA2B,cAAzC,EAAwDA,IAAxD,EAA8DM,IAA9D,CAAmEG,QAAQ,IAAI;AAC3EC,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAjB,UAAAA,UAAU,CAAC,MAAD,CAAV;AACAzC,UAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH,SAJD,EAIG2D,KAJH,CAISC,KAAK,IAAI;AACdH,UAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAnB,UAAAA,UAAU,CAAC,0CAAD,CAAV;AACAzC,UAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH,SARD;AASH,OAVD,EAUG2D,KAVH,CAUSC,KAAK,IAAI;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACAnB,QAAAA,UAAU,CAAC,0CAAD,CAAV;AACAzC,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH,OAdD;AAeH,KAhBD,MAiBK;AACDyC,MAAAA,UAAU,CAACQ,iBAAD,CAAV;AACAjD,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH;AACJ,GA3CD;;AA6CA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE6B;AAAhB,OAA6B,OAA7B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,QAAQ,EAAEc,QAAtC;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,sBAEQkB,MAAM,CAACC,IAAP,CAAYlD,MAAZ,EAAoBmD,GAApB,CAAwB,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAC3C,kCACI,QAAC,KAAD;AAEI,gBAAA,QAAQ,EAAErD,MAAM,CAACoD,OAAD,CAAN,CAAgBjD,QAF9B;AAGI,gBAAA,WAAW,EAAEkD,QAAQ,GAAG,CAH5B;AAII,gBAAA,SAAS,EAAErD,MAAM,CAACoD,OAAD,CAAN,CAAgBhD,SAJ/B;AAKI,gBAAA,OAAO,EAAEJ,MAAM,CAACoD,OAAD,CAAN,CAAgB/C,OAL7B;AAMI,gBAAA,WAAW,EAAEG;AANjB,iBACS4C,OAAO,GAACpD,MAAM,CAACoD,OAAD,CAAN,CAAgBjD,QADjC;AAAA;AAAA;AAAA;AAAA,sBADJ;AAUH,aAXD;AAFR;AAAA;AAAA;AAAA;AAAA,kBADJ,eAiBI;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,mCACI;AAAI,cAAA,SAAS,EAAC,WAAd;AAAA,wBAEI8C,MAAM,CAACC,IAAP,CAAY3D,IAAZ,EAAkB4D,GAAlB,CAAsB,CAACC,OAAD,EAAUC,QAAV,KAAuB;AACzC,oCAAO,QAAC,GAAD;AAEC,kBAAA,GAAG,EAAED,OAFN;AAGC,kBAAA,KAAK,EAAE7D,IAAI,CAAC6D,OAAD,CAHZ;AAIC,kBAAA,SAAS,EAAEtC;AAJZ,mBACMsC,OAAO,GAAC7D,IAAI,CAAC6D,OAAD,CADlB;AAAA;AAAA;AAAA;AAAA,wBAAP;AAMC,eAPL;AAFJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAiCI;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,KAAK,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,WAAhB;AAA4B,YAAA,KAAK,EAAC,SAAlC;AAA4C,YAAA,IAAI,EAAC,QAAjD;AAA0D,YAAA,QAAQ,EAAEjE,gBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjCJ,eAuCI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACI;AAAG,YAAA,SAAS,EAAC,gBAAb;AAA8B,YAAA,KAAK,EAAE;AAACmE,cAAAA,KAAK,EAAEjE;AAAR,aAArC;AAAA,sBAA0DJ;AAA1D;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,gBAAD;AACI,YAAA,SAAS,EAAC,QADd;AAEI,YAAA,OAAO,EAAEF;AAFb;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0DH,CArMD;;GAAMD,Q;;KAAAA,Q;AAuMN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { validateWeek } from '../utils/Validate';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport axios from 'axios';\nimport { firestore } from '../utils/Firebase';\n\nimport Popup from '../model/Popup';\nimport Day from \"../components/Day\";\nimport Cycle from '../components/Cycle';\n\nimport './MainPage.css';\n\nlet userEmail = \"\";\n\nconst MainPage = () => {\n\n    const [loading, setLoading] = useState(\"determinate\");\n    const [submitMessage, setSubmitMessage] = useState(\"\");\n    const [isSubmitDisabled, setIsSubmitDisabled] = useState(false);\n    const [textColor, setTextColor] = useState(\"red\");\n\n    const [week, setWeek] = useState({\n        sunday: false,\n        monday: false,\n        tuesday: false,\n        wednesday: false,\n        thursday: false,\n        friday: false,\n        saturday: false\n    });\n    \n    const [rounds, setRounds] = useState({\n        round1: {\n            isActive: false,\n            startTime: null,\n            endTime: null\n        },\n        round2: {\n            isActive: false,\n            startTime: null,\n            endTime: null\n        },\n        round3: {\n            isActive: false,\n            startTime: null,\n            endTime: null\n        }\n    });\n\n    const updateRound = (round, propToUpdate, state) => {\n        let updatedRound = rounds[round];\n\n        updatedRound[propToUpdate] = state;\n        let updatedRounds = {...rounds};\n        updatedRounds[round] = updatedRound;\n        setRounds(updatedRounds);\n    }\n\n    const updateDay = (day, state) => {\n        let updatedWeek = {...week};\n        updatedWeek[day] = state;\n        setWeek(updatedWeek);\n    }\n\n    const setData = (email, userData) => {\n        userEmail = email;\n\n        setWeek({\n            sunday: userData.sunday,\n            monday: userData.monday,\n            tuesday: userData.tuesday,\n            wednesday: userData.wednesday,\n            thursday: userData.thursday,\n            friday: userData.friday,\n            saturday: userData.saturday\n        });\n\n\n        setRounds({\n            round1: {\n                isActive: userData.isFirstRoundActive,\n                startTime: userData.firstRoundStart,\n                endTime: userData.firstRoundEnd\n            },\n            round2: {\n                isActive: userData.isSecondRoundActive,\n                startTime: userData.secondRoundStart,\n                endTime: userData.secondRoundEnd\n            },\n            round3: {\n                isActive: userData.isThirdRoundActive,\n                startTime: userData.thirdRoundStart,\n                endTime: userData.thirdRoundEnd\n            }\n        });\n    }\n\n    const setMessage = (message) => {\n        setLoading(\"determinate\");\n        if (message === \"Done\") {\n            setTextColor(\"green\");\n        }\n        else {\n            setTextColor(\"red\");\n        }\n        setSubmitMessage(message);\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        setIsSubmitDisabled(true);\n        setMessage(\"\");\n        setLoading(\"indeterminate\");\n        const db = firestore;\n\n        const data = {\n            ...week,\n            \"firstRoundStart\":rounds.round1.startTime ? `${rounds.round1.startTime.split(\":\")[0]}:${rounds.round1.startTime.split(\":\")[1]}:00` : null,\n            \"firstRoundEnd\":rounds.round1.endTime ? `${rounds.round1.endTime.split(\":\")[0]}:${rounds.round1.endTime.split(\":\")[1]}:00` : null,\n            \"secondRoundStart\":rounds.round2.startTime ? `${rounds.round2.startTime.split(\":\")[0]}:${rounds.round2.startTime.split(\":\")[1]}:00` : null,\n            \"secondRoundEnd\":rounds.round2.endTime ? `${rounds.round2.endTime.split(\":\")[0]}:${rounds.round2.endTime.split(\":\")[1]}:00` : null,\n            \"thirdRoundStart\":rounds.round3.startTime ? `${rounds.round3.startTime.split(\":\")[0]}:${rounds.round3.startTime.split(\":\")[1]}:00` : null,\n            \"thirdRoundEnd\":rounds.round3.endTime ? `${rounds.round3.endTime.split(\":\")[0]}:${rounds.round3.endTime.split(\":\")[1]}:00` : null,\n            \"isFirstRoundActive\":rounds.round1.isActive,\n            \"isSecondRoundActive\":rounds.round2.isActive,\n            \"isThirdRoundActive\":rounds.round3.isActive\n        }\n\n        const validationMessage = validateWeek(data)\n        \n        if (validationMessage === \"valid\") {\n            db.collection(\"users\").doc(\"tamirhen6@gmail.com\").get().then(user => {\n                axios.post(`${user.data()[\"dataplicity\"]}/update_week`, data).then(response => {\n                    console.log(\"data updated successfully\");\n                    setMessage(\"Done\");\n                    setIsSubmitDisabled(false);\n                }).catch(error => {\n                    console.log(error);\n                    setMessage(\"Connection error, please try again later\");\n                    setIsSubmitDisabled(false);\n                })\n            }).catch(error => {\n                console.log(error);\n                setMessage(\"Connection error, please try again later\");\n                setIsSubmitDisabled(false);\n            })\n        }\n        else {\n            setMessage(validationMessage);\n            setIsSubmitDisabled(false);\n        }\n    }\n\n    return (\n      <React.Fragment>\n        <Popup setData={setData} key=\"popup\"/>\n        <div className=\"main-container\">\n            <div className=\"title-wrapper\">\n                <h1>Home Irrigation System</h1>\n            </div>\n            <form className=\"main-form\" onSubmit={onSubmit}>\n                <div className=\"form-body\">\n                    <div className=\"form-object-wrapper\">\n                        {\n                            Object.keys(rounds).map((keyName, keyIndex) => {\n                                return (\n                                    <Cycle\n                                        key={keyName+rounds[keyName].isActive}\n                                        isActive={rounds[keyName].isActive}\n                                        cycleNumber={keyIndex + 1}\n                                        startTime={rounds[keyName].startTime}\n                                        endTime={rounds[keyName].endTime}\n                                        updateRound={updateRound}\n                                    />\n                                )\n                            })\n                        }\n                    </div>\n                    <div className=\"form-object-wrapper\">\n                        <ul className=\"week-list\">\n                            {\n                            Object.keys(week).map((keyName, keyIndex) => {\n                                return <Day \n                                        key={keyName+week[keyName]}\n                                        day={keyName}\n                                        state={week[keyName]}\n                                        updateDay={updateDay}\n                                    />\n                                })\n                            }\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"Submit-button-wrapper\">\n                    <Button variant=\"contained\" color=\"secondary\">One Time</Button>\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={isSubmitDisabled}>\n                        Submit\n                    </Button>\n                </div>\n                <div className=\"loader-wrapper\">\n                    <p className=\"submit-message\" style={{color: textColor}}>{submitMessage}</p>\n                    <CircularProgress\n                        className=\"loader\"\n                        variant={loading}\n                    />\n                </div>\n                \n            </form>\n        </div>\n      </React.Fragment>\n    )\n}\n\nexport default MainPage;"]},"metadata":{},"sourceType":"module"}