{"ast":null,"code":"/* eslint-disable no-use-before-define */\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCmWhdLsNWdcoy5n73aVuX2Wb17Qkw4MKw',\n  authDomain: 'smart-irrigation-system-854fa.firebaseapp.com',\n  databaseURL: 'https://smart-irrigation-system-854fa.firebaseio.com',\n  projectId: 'smart-irrigation-system-854fa',\n  storageBucket: 'smart-irrigation-system-854fa.appspot.com',\n  messagingSenderId: '175621433547',\n  appId: '1:175621433547:web:f80840fa5b9790147cd34e',\n  measurementId: 'G-C6JDMHJCFC'\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const generateUserDocument = async (email, additionalData) => {\n  // const firestore = firebase.firestore();\n  if (!email) return 'User is undefined or null';\n  const userRef = firestore.doc(`users/${email.uid}`);\n  const data = await userRef.get();\n\n  if (!data.exists) {\n    console.log(data);\n    const {\n      email,\n      displayName,\n      photoURL\n    } = email;\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error('Error creating user document', error);\n    }\n  }\n\n  return getUserDocument(email.uid);\n};\n\nconst getUserDocument = async uid => {\n  if (!uid) return null;\n\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n    return {\n      uid,\n      ...userDocument.data()\n    };\n  } catch (error) {\n    console.error('Error fetching user', error);\n  }\n\n  return 'test';\n};","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/utils/Firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","generateUserDocument","email","additionalData","userRef","doc","uid","data","get","exists","console","log","displayName","photoURL","set","error","getUserDocument","userDocument"],"mappings":"AAAA;AACA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,+CAFS;AAGrBC,EAAAA,WAAW,EAAE,sDAHQ;AAIrBC,EAAAA,SAAS,EAAE,+BAJU;AAKrBC,EAAAA,aAAa,EAAE,2CALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE,2CAPc;AAQrBC,EAAAA,aAAa,EAAE;AARM,CAAvB;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,cAAvB;AAEA,OAAO,MAAMU,IAAI,GAAGX,QAAQ,CAACW,IAAT,EAAb;AAEP,OAAO,MAAMC,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AAEP,OAAO,MAAMC,oBAAoB,GAAG,OAAOC,KAAP,EAAcC,cAAd,KAAiC;AACnE;AACA,MAAI,CAACD,KAAL,EAAY,OAAO,2BAAP;AACZ,QAAME,OAAO,GAAGJ,SAAS,CAACK,GAAV,CAAe,SAAQH,KAAK,CAACI,GAAI,EAAjC,CAAhB;AACA,QAAMC,IAAI,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAnB;;AACA,MAAI,CAACD,IAAI,CAACE,MAAV,EAAkB;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,UAAM;AAAEL,MAAAA,KAAF;AAASU,MAAAA,WAAT;AAAsBC,MAAAA;AAAtB,QAAmCX,KAAzC;;AACA,QAAI;AACF,YAAME,OAAO,CAACU,GAAR,CAAY;AAChBF,QAAAA,WADgB;AAEhBV,QAAAA,KAFgB;AAGhBW,QAAAA,QAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOY,KAAP,EAAc;AACdL,MAAAA,OAAO,CAACK,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACD;AACF;;AACD,SAAOC,eAAe,CAACd,KAAK,CAACI,GAAP,CAAtB;AACD,CApBM;;AAqBP,MAAMU,eAAe,GAAG,MAAOV,GAAP,IAAe;AACrC,MAAI,CAACA,GAAL,EAAU,OAAO,IAAP;;AACV,MAAI;AACF,UAAMW,YAAY,GAAG,MAAMjB,SAAS,CAACK,GAAV,CAAe,SAAQC,GAAI,EAA3B,EAA8BE,GAA9B,EAA3B;AACA,WAAO;AACLF,MAAAA,GADK;AAEL,SAAGW,YAAY,CAACV,IAAb;AAFE,KAAP;AAID,GAND,CAME,OAAOQ,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACK,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACD;;AACD,SAAO,MAAP;AACD,CAZD","sourcesContent":["/* eslint-disable no-use-before-define */\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCmWhdLsNWdcoy5n73aVuX2Wb17Qkw4MKw',\n  authDomain: 'smart-irrigation-system-854fa.firebaseapp.com',\n  databaseURL: 'https://smart-irrigation-system-854fa.firebaseio.com',\n  projectId: 'smart-irrigation-system-854fa',\n  storageBucket: 'smart-irrigation-system-854fa.appspot.com',\n  messagingSenderId: '175621433547',\n  appId: '1:175621433547:web:f80840fa5b9790147cd34e',\n  measurementId: 'G-C6JDMHJCFC',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\n\nexport const firestore = firebase.firestore();\n\nexport const generateUserDocument = async (email, additionalData) => {\n  // const firestore = firebase.firestore();\n  if (!email) return 'User is undefined or null';\n  const userRef = firestore.doc(`users/${email.uid}`);\n  const data = await userRef.get();\n  if (!data.exists) {\n    console.log(data);\n    const { email, displayName, photoURL } = email;\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        photoURL,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.error('Error creating user document', error);\n    }\n  }\n  return getUserDocument(email.uid);\n};\nconst getUserDocument = async (uid) => {\n  if (!uid) return null;\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n    return {\n      uid,\n      ...userDocument.data(),\n    };\n  } catch (error) {\n    console.error('Error fetching user', error);\n  }\n  return 'test';\n};\n"]},"metadata":{},"sourceType":"module"}