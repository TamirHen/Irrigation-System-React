{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/Tabs/Manual.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-expressions */\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport './Manual.css';\n\nfunction Manual(props) {\n  _s();\n\n  const [textButton, setTextColor] = useState('START');\n  const {\n    user\n  } = props;\n\n  const clickButton = event => {\n    event.preventDefault();\n\n    if (textButton === 'START') {\n      axios.post(`${user.data().dataplicity}/update_week`, data).then(() => {\n        console.log('data updated successfully');\n        setMessage('Done');\n        setIsSubmitDisabled(false);\n      }).catch(error => {\n        console.log(error);\n        setMessage('Connection error, please try again later');\n        setIsSubmitDisabled(false);\n      });\n      setTextColor('STOP');\n    } else {\n      setTextColor('Start');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"manual-irrigation-form\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"minutes-input\",\n      label: \"Minutes\",\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      id: \"breathing-button\",\n      className: \"manual-button\",\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      onClick: clickButton,\n      children: textButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Manual, \"MKtUpdSqoUs8p202Pgx/iyB+uuk=\");\n\n_c = Manual;\nexport default Manual;\n\nvar _c;\n\n$RefreshReg$(_c, \"Manual\");","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/Tabs/Manual.js"],"names":["React","useState","TextField","Button","axios","Manual","props","textButton","setTextColor","user","clickButton","event","preventDefault","post","data","dataplicity","then","console","log","setMessage","setIsSubmitDisabled","catch","error"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,cAAP;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AACrB,QAAM,CAACC,UAAD,EAAaC,YAAb,IAA6BP,QAAQ,CAAC,OAAD,CAA3C;AAEA,QAAM;AAAEQ,IAAAA;AAAF,MAAWH,KAAjB;;AAEA,QAAMI,WAAW,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIL,UAAU,KAAK,OAAnB,EAA4B;AAC1BH,MAAAA,KAAK,CACFS,IADH,CACS,GAAEJ,IAAI,CAACK,IAAL,GAAYC,WAAY,cADnC,EACkDD,IADlD,EAEGE,IAFH,CAEQ,MAAM;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAC,QAAAA,UAAU,CAAC,MAAD,CAAV;AACAC,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,OANH,EAOGC,KAPH,CAOUC,KAAD,IAAW;AAChBL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAH,QAAAA,UAAU,CAAC,0CAAD,CAAV;AACAC,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,OAXH;AAaAZ,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACD,KAfD,MAeO;AACLA,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACD;AACF,GApBD;;AAqBA,sBACE;AAAM,IAAA,SAAS,EAAC,wBAAhB;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,EAAE,EAAC,eAAd;AAA8B,MAAA,KAAK,EAAC,SAApC;AAA8C,MAAA,OAAO,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACE,MAAA,EAAE,EAAC,kBADL;AAEE,MAAA,SAAS,EAAC,eAFZ;AAGE,MAAA,OAAO,EAAC,WAHV;AAIE,MAAA,KAAK,EAAC,SAJR;AAKE,MAAA,IAAI,EAAC,QALP;AAME,MAAA,OAAO,EAAEE,WANX;AAAA,gBAQGH;AARH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAzCQF,M;;KAAAA,M;AA2CT,eAAeA,MAAf","sourcesContent":["/* eslint-disable no-unused-expressions */\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\n\nimport './Manual.css';\n\nfunction Manual(props) {\n  const [textButton, setTextColor] = useState('START');\n\n  const { user } = props;\n\n  const clickButton = (event) => {\n    event.preventDefault();\n    if (textButton === 'START') {\n      axios\n        .post(`${user.data().dataplicity}/update_week`, data)\n        .then(() => {\n          console.log('data updated successfully');\n          setMessage('Done');\n          setIsSubmitDisabled(false);\n        })\n        .catch((error) => {\n          console.log(error);\n          setMessage('Connection error, please try again later');\n          setIsSubmitDisabled(false);\n        });\n\n      setTextColor('STOP');\n    } else {\n      setTextColor('Start');\n    }\n  };\n  return (\n    <form className=\"manual-irrigation-form\">\n      <TextField id=\"minutes-input\" label=\"Minutes\" variant=\"outlined\" />\n      <Button\n        id=\"breathing-button\"\n        className=\"manual-button\"\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"submit\"\n        onClick={clickButton}\n      >\n        {textButton}\n      </Button>\n    </form>\n  );\n}\n\nexport default Manual;\n"]},"metadata":{},"sourceType":"module"}