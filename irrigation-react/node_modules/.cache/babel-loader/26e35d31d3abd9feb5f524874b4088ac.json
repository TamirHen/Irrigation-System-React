{"ast":null,"code":"/* eslint-disable no-param-reassign */\n\n/* eslint-disable no-console */\n\n/* eslint-disable no-plusplus */\n\n/* eslint-disable no-restricted-syntax */\nimport moment from 'moment';\n\nconst nextIrrigation = (weekData, roundsData) => {\n  if (!weekData || !roundsData) {\n    return 'Error';\n  }\n\n  const nextSevenDays = [];\n\n  for (let i = 0; i < 7; i++) {\n    nextSevenDays[i] = moment().add(i, 'days').format('dddd');\n    let nextIrrigationTime = moment(new Date(), 'HH:mm:ss');\n    let nextIrrigationRound;\n\n    if (weekData[nextSevenDays[i].toLowerCase()].isActive === true) {\n      for (const [, round] of Object.entries(roundsData)) {\n        const startTimeMoment = moment(round.startTime, 'HH:mm:ss');\n\n        if (round.isActive && i === 0 && // i = 0 - today\n        startTimeMoment.isAfter(moment(new Date(), 'HH:mm:ss')) || round.isActive && i !== 0) {\n          if (startTimeMoment.isBefore(nextIrrigationTime)) {\n            nextIrrigationTime = startTimeMoment;\n            nextIrrigationRound = round;\n          }\n        }\n      }\n\n      if (nextIrrigationRound) {\n        const times = nextIrrigationRound.startTime.split(':');\n        return `${nextSevenDays[i]} ${times[0]}:${times[1]}`;\n      }\n    }\n  }\n\n  return 'Not set';\n};\n\nexport default nextIrrigation;","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/utils/NextIrrigation.js"],"names":["moment","nextIrrigation","weekData","roundsData","nextSevenDays","i","add","format","nextIrrigationTime","Date","nextIrrigationRound","toLowerCase","isActive","round","Object","entries","startTimeMoment","startTime","isAfter","isBefore","times","split"],"mappings":"AAAA;;AACA;;AACA;;AACA;AACA,OAAOA,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,UAAX,KAA0B;AAC/C,MAAI,CAACD,QAAD,IAAa,CAACC,UAAlB,EAA8B;AAC5B,WAAO,OAAP;AACD;;AACD,QAAMC,aAAa,GAAG,EAAtB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BD,IAAAA,aAAa,CAACC,CAAD,CAAb,GAAmBL,MAAM,GAAGM,GAAT,CAAaD,CAAb,EAAgB,MAAhB,EAAwBE,MAAxB,CAA+B,MAA/B,CAAnB;AACA,QAAIC,kBAAkB,GAAGR,MAAM,CAAC,IAAIS,IAAJ,EAAD,EAAa,UAAb,CAA/B;AACA,QAAIC,mBAAJ;;AACA,QAAIR,QAAQ,CAACE,aAAa,CAACC,CAAD,CAAb,CAAiBM,WAAjB,EAAD,CAAR,CAAyCC,QAAzC,KAAsD,IAA1D,EAAgE;AAC9D,WAAK,MAAM,GAAGC,KAAH,CAAX,IAAwBC,MAAM,CAACC,OAAP,CAAeZ,UAAf,CAAxB,EAAoD;AAClD,cAAMa,eAAe,GAAGhB,MAAM,CAACa,KAAK,CAACI,SAAP,EAAkB,UAAlB,CAA9B;;AACA,YACGJ,KAAK,CAACD,QAAN,IACCP,CAAC,KAAK,CADP,IACY;AACXW,QAAAA,eAAe,CAACE,OAAhB,CAAwBlB,MAAM,CAAC,IAAIS,IAAJ,EAAD,EAAa,UAAb,CAA9B,CAFF,IAGCI,KAAK,CAACD,QAAN,IAAkBP,CAAC,KAAK,CAJ3B,EAKE;AACA,cAAIW,eAAe,CAACG,QAAhB,CAAyBX,kBAAzB,CAAJ,EAAkD;AAChDA,YAAAA,kBAAkB,GAAGQ,eAArB;AACAN,YAAAA,mBAAmB,GAAGG,KAAtB;AACD;AACF;AACF;;AACD,UAAIH,mBAAJ,EAAyB;AACvB,cAAMU,KAAK,GAAGV,mBAAmB,CAACO,SAApB,CAA8BI,KAA9B,CAAoC,GAApC,CAAd;AACA,eAAQ,GAAEjB,aAAa,CAACC,CAAD,CAAI,IAAGe,KAAK,CAAC,CAAD,CAAI,IAAGA,KAAK,CAAC,CAAD,CAAI,EAAnD;AACD;AACF;AACF;;AACD,SAAO,SAAP;AACD,CA/BD;;AAiCA,eAAenB,cAAf","sourcesContent":["/* eslint-disable no-param-reassign */\n/* eslint-disable no-console */\n/* eslint-disable no-plusplus */\n/* eslint-disable no-restricted-syntax */\nimport moment from 'moment';\n\nconst nextIrrigation = (weekData, roundsData) => {\n  if (!weekData || !roundsData) {\n    return 'Error';\n  }\n  const nextSevenDays = [];\n  for (let i = 0; i < 7; i++) {\n    nextSevenDays[i] = moment().add(i, 'days').format('dddd');\n    let nextIrrigationTime = moment(new Date(), 'HH:mm:ss');\n    let nextIrrigationRound;\n    if (weekData[nextSevenDays[i].toLowerCase()].isActive === true) {\n      for (const [, round] of Object.entries(roundsData)) {\n        const startTimeMoment = moment(round.startTime, 'HH:mm:ss');\n        if (\n          (round.isActive &&\n            i === 0 && // i = 0 - today\n            startTimeMoment.isAfter(moment(new Date(), 'HH:mm:ss'))) ||\n          (round.isActive && i !== 0)\n        ) {\n          if (startTimeMoment.isBefore(nextIrrigationTime)) {\n            nextIrrigationTime = startTimeMoment;\n            nextIrrigationRound = round;\n          }\n        }\n      }\n      if (nextIrrigationRound) {\n        const times = nextIrrigationRound.startTime.split(':');\n        return `${nextSevenDays[i]} ${times[0]}:${times[1]}`;\n      }\n    }\n  }\n  return 'Not set';\n};\n\nexport default nextIrrigation;\n"]},"metadata":{},"sourceType":"module"}