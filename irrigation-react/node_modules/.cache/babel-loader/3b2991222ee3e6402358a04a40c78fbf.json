{"ast":null,"code":"/* eslint-disable consistent-return */\n\n/* eslint-disable no-plusplus */\n\n/* eslint-disable no-restricted-syntax */\nimport moment from 'moment';\n\nconst nextIrrigation = (weekData, roundsData) => {\n  if (!weekData || !roundsData) {\n    return 'Error';\n  }\n\n  const nextSevenDays = [];\n  const irrigationStartHours = Object.keys(roundsData).map(round => moment(roundsData[round].startTime, 'HH:mm:ss'));\n  const sortedStartHours = irrigationStartHours.sort((a, b) => a.valueOf() - b.valueOf());\n  const minTime = sortedStartHours[0];\n  const now = moment(new Date(), 'HH:mm:ss');\n\n  for (let i = 0; i < 7; i++) {\n    nextSevenDays[i] = moment().add(i, 'days').format('dddd');\n\n    if (weekData[nextSevenDays[i].toLowerCase()]) {\n      if (minTime.isAfter(now)) {\n        return `${nextSevenDays[i]} ${minTime.format('HH:mm')}`;\n      }\n\n      if (i === 0) {\n        // its today\n        sortedStartHours.forEach(startHour => {\n          if (startHour.isAfter(now)) {\n            console.log(startHour);\n            return `${nextSevenDays[i]} ${startHour.format('HH:mm')}`;\n          }\n        });\n      }\n\n      console.log(startHour);\n      return `${nextSevenDays[i]} ${minTime.format('HH:mm')}`;\n    }\n  }\n\n  return 'Not set';\n};\n\nexport default nextIrrigation;","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/utils/NextIrrigation.js"],"names":["moment","nextIrrigation","weekData","roundsData","nextSevenDays","irrigationStartHours","Object","keys","map","round","startTime","sortedStartHours","sort","a","b","valueOf","minTime","now","Date","i","add","format","toLowerCase","isAfter","forEach","startHour","console","log"],"mappings":"AAAA;;AACA;;AACA;AACA,OAAOA,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,UAAX,KAA0B;AAC/C,MAAI,CAACD,QAAD,IAAa,CAACC,UAAlB,EAA8B;AAC5B,WAAO,OAAP;AACD;;AACD,QAAMC,aAAa,GAAG,EAAtB;AACA,QAAMC,oBAAoB,GAAGC,MAAM,CAACC,IAAP,CAAYJ,UAAZ,EAAwBK,GAAxB,CAA6BC,KAAD,IACvDT,MAAM,CAACG,UAAU,CAACM,KAAD,CAAV,CAAkBC,SAAnB,EAA8B,UAA9B,CADqB,CAA7B;AAGA,QAAMC,gBAAgB,GAAGN,oBAAoB,CAACO,IAArB,CACvB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,OAAF,KAAcD,CAAC,CAACC,OAAF,EADD,CAAzB;AAGA,QAAMC,OAAO,GAAGL,gBAAgB,CAAC,CAAD,CAAhC;AACA,QAAMM,GAAG,GAAGjB,MAAM,CAAC,IAAIkB,IAAJ,EAAD,EAAa,UAAb,CAAlB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1Bf,IAAAA,aAAa,CAACe,CAAD,CAAb,GAAmBnB,MAAM,GAAGoB,GAAT,CAAaD,CAAb,EAAgB,MAAhB,EAAwBE,MAAxB,CAA+B,MAA/B,CAAnB;;AACA,QAAInB,QAAQ,CAACE,aAAa,CAACe,CAAD,CAAb,CAAiBG,WAAjB,EAAD,CAAZ,EAA8C;AAC5C,UAAIN,OAAO,CAACO,OAAR,CAAgBN,GAAhB,CAAJ,EAA0B;AACxB,eAAQ,GAAEb,aAAa,CAACe,CAAD,CAAI,IAAGH,OAAO,CAACK,MAAR,CAAe,OAAf,CAAwB,EAAtD;AACD;;AAED,UAAIF,CAAC,KAAK,CAAV,EAAa;AACX;AACAR,QAAAA,gBAAgB,CAACa,OAAjB,CAA0BC,SAAD,IAAe;AACtC,cAAIA,SAAS,CAACF,OAAV,CAAkBN,GAAlB,CAAJ,EAA4B;AAC1BS,YAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,mBAAQ,GAAErB,aAAa,CAACe,CAAD,CAAI,IAAGM,SAAS,CAACJ,MAAV,CAAiB,OAAjB,CAA0B,EAAxD;AACD;AACF,SALD;AAMD;;AACDK,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEA,aAAQ,GAAErB,aAAa,CAACe,CAAD,CAAI,IAAGH,OAAO,CAACK,MAAR,CAAe,OAAf,CAAwB,EAAtD;AACD;AACF;;AACD,SAAO,SAAP;AACD,CApCD;;AAsCA,eAAepB,cAAf","sourcesContent":["/* eslint-disable consistent-return */\n/* eslint-disable no-plusplus */\n/* eslint-disable no-restricted-syntax */\nimport moment from 'moment';\n\nconst nextIrrigation = (weekData, roundsData) => {\n  if (!weekData || !roundsData) {\n    return 'Error';\n  }\n  const nextSevenDays = [];\n  const irrigationStartHours = Object.keys(roundsData).map((round) =>\n    moment(roundsData[round].startTime, 'HH:mm:ss'),\n  );\n  const sortedStartHours = irrigationStartHours.sort(\n    (a, b) => a.valueOf() - b.valueOf(),\n  );\n  const minTime = sortedStartHours[0];\n  const now = moment(new Date(), 'HH:mm:ss');\n\n  for (let i = 0; i < 7; i++) {\n    nextSevenDays[i] = moment().add(i, 'days').format('dddd');\n    if (weekData[nextSevenDays[i].toLowerCase()]) {\n      if (minTime.isAfter(now)) {\n        return `${nextSevenDays[i]} ${minTime.format('HH:mm')}`;\n      }\n\n      if (i === 0) {\n        // its today\n        sortedStartHours.forEach((startHour) => {\n          if (startHour.isAfter(now)) {\n            console.log(startHour);\n            return `${nextSevenDays[i]} ${startHour.format('HH:mm')}`;\n          }\n        });\n      }\n      console.log(startHour);\n\n      return `${nextSevenDays[i]} ${minTime.format('HH:mm')}`;\n    }\n  }\n  return 'Not set';\n};\n\nexport default nextIrrigation;\n"]},"metadata":{},"sourceType":"module"}