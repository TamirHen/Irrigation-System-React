{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/model/Popup.js\";\nimport React from \"react\";\nimport ReactModalLogin from \"react-modal-login\";\nimport { auth, firestore } from '../utils/Firebase';\nimport axios from 'axios';\nimport './Popup.css';\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: true,\n      loading: false,\n      error: null,\n      loggedIn: null,\n      initialTab: null\n    };\n  }\n\n  openModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      showModal: false,\n      error: null\n    }); // this.finishLoading();\n  }\n\n  onLogin() {\n    this.startLoading();\n    const db = firestore;\n    const email = document.querySelector('#email-login').value;\n    const password = document.querySelector('#password-login').value;\n    this.setState({\n      error: null\n    });\n    auth.signInWithEmailAndPassword(email, password).then(cred => {\n      db.collection(\"users\").doc(email).get().then(user => {\n        if (user.exists) {\n          axios.get(`${user.data()[\"dataplicity\"]}/get_week`).then(response => {\n            console.log(\"login successfully\"); // this.closeModal();\n\n            this.onLoginSuccess(\"form\");\n            this.props.setData(email, response.data);\n          }).catch(error => {\n            console.log(error);\n            this.errorHandler();\n          });\n        } else {\n          console.log(\"No such document\");\n          this.errorHandler();\n        }\n      }).catch(function (error) {\n        console.log(\"Error getting document:\", error);\n        this.errorHandler();\n      });\n    }, err => {\n      this.errorHandler();\n    });\n  }\n\n  onRegister() {\n    this.startLoading();\n    const db = firestore;\n    const email = document.querySelector('#email-signup').value;\n    const password = document.querySelector('#password-signup').value;\n    const urlCode = document.querySelector('#urlCode-signup').value;\n    this.setState({\n      error: null\n    });\n    auth.createUserWithEmailAndPassword(email, password).then(cred => {\n      db.collection(\"users\").doc(email).set({\n        dataplicity: urlCode\n      }); // Needs to override error message when user signup successfully but could't connect to the pi.\n\n      axios.get(`${urlCode}/get_week`).then(response => {\n        console.log(\"signed up and connected to pi successfully\"); // this.closeModal();\n\n        this.onLoginSuccess(\"form\");\n        this.props.setData(email, response.data);\n      }).catch(error => {\n        console.log(error);\n        console.log(\"Sing up successfully, there was a problem with the connection to the pi\");\n        this.errorHandler();\n      });\n    }, err => {\n      this.errorHandler();\n    });\n  }\n\n  onLoginSuccess(method, response) {\n    this.closeModal();\n    this.setState({\n      loggedIn: method,\n      loading: false\n    });\n  }\n\n  onLoginFail(method, response) {\n    this.setState({\n      loading: false,\n      error: response\n    });\n  }\n\n  startLoading() {\n    this.setState({\n      loading: true\n    });\n  }\n\n  finishLoading() {\n    this.setState({\n      loading: false\n    });\n  }\n\n  afterTabsChange() {\n    this.setState({\n      error: null\n    });\n  }\n\n  errorHandler() {\n    this.setState({\n      error: true\n    });\n    this.finishLoading();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ReactModalLogin, {\n          visible: this.state.showModal //   onCloseModal={this.closeModal.bind(this)}\n          ,\n          loading: this.state.loading,\n          initialTab: this.state.initialTab,\n          error: this.state.error,\n          tabs: {\n            afterChange: this.afterTabsChange.bind(this)\n          },\n          loginError: {\n            // containerClass: \"error-message\",\n            label: \"Couldn't sign in, please try again\"\n          },\n          registerError: {\n            // containerClass: \"error-message\",\n            label: \"Couldn't sign up, please try again\"\n          },\n          startLoading: this.startLoading.bind(this),\n          finishLoading: this.finishLoading.bind(this),\n          closeBtn: {\n            containerClass: \"close-button\"\n          },\n          form: {\n            loginInputs: [{\n              // containerClass: \"popup-input-wrapper\",\n              id: \"email-login\",\n              type: \"email\",\n              // inputClass: \"popup-input\",\n              name: \"Email\",\n              label: \"Email\"\n            }, {\n              // containerClass: \"popup-input-wrapper\",\n              id: \"password-login\",\n              type: \"password\",\n              // inputClass: \"popup-input\",\n              name: \"Password\",\n              label: \"Password\"\n            }],\n            registerInputs: [{\n              // containerClass: \"popup-input-wrapper\",\n              id: \"email-signup\",\n              type: \"email\",\n              // inputClass: \"popup-input\",\n              name: \"Email\",\n              label: \"Email\"\n            }, {\n              // containerClass: \"popup-input-wrapper\",\n              id: \"password-signup\",\n              type: \"password\",\n              // inputClass: \"popup-input\",\n              name: \"Password\",\n              label: \"Password\"\n            }, {\n              // containerClass: \"popup-input-wrapper\",\n              id: \"urlCode-signup\",\n              type: \"text\",\n              // inputClass: \"popup-input\",\n              name: \"URL Code\",\n              label: \"URL Code\"\n            }],\n            loginBtn: {\n              label: \"Sign in\"\n            },\n            registerBtn: {\n              label: \"Sign up\"\n            },\n            onLogin: this.onLogin.bind(this),\n            onRegister: this.onRegister.bind(this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Popup;","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/model/Popup.js"],"names":["React","ReactModalLogin","auth","firestore","axios","Popup","Component","constructor","props","state","showModal","loading","error","loggedIn","initialTab","openModal","setState","closeModal","onLogin","startLoading","db","email","document","querySelector","value","password","signInWithEmailAndPassword","then","cred","collection","doc","get","user","exists","data","response","console","log","onLoginSuccess","setData","catch","errorHandler","err","onRegister","urlCode","createUserWithEmailAndPassword","set","dataplicity","method","onLoginFail","finishLoading","afterTabsChange","render","afterChange","bind","label","containerClass","loginInputs","id","type","name","registerInputs","loginBtn","registerBtn"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactModalLogin from \"react-modal-login\";\nimport { auth, firestore } from '../utils/Firebase';\nimport axios from 'axios';\n\nimport './Popup.css';\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      showModal: true,\n      loading: false,\n      error: null,\n      loggedIn: null,\n      initialTab: null\n    };\n  }\n\n \n  openModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n \n  closeModal() {\n    this.setState({\n      showModal: false,\n      error: null\n    });\n    // this.finishLoading();\n  }\n\n  onLogin() {\n    this.startLoading();\n    const db = firestore;\n    const email = document.querySelector('#email-login').value;\n    const password = document.querySelector('#password-login').value;\n\n    this.setState({\n      error: null\n    });\n\n    auth.signInWithEmailAndPassword(email, password).then(cred => {\n      db.collection(\"users\").doc(email).get().then(user => {\n        if (user.exists) {\n            axios.get(`${user.data()[\"dataplicity\"]}/get_week`).then(response => {\n              console.log(\"login successfully\");\n              // this.closeModal();\n              this.onLoginSuccess(\"form\");\n              this.props.setData(email , response.data);\n            }).catch(error => {\n              console.log(error);\n              this.errorHandler();\n            })\n        } else {\n            console.log(\"No such document\");\n            this.errorHandler();\n        }\n    }).catch(function(error) {\n        console.log(\"Error getting document:\", error);\n        this.errorHandler();\n    });\n    }, err => {\n      this.errorHandler();\n    });\n  }\n\n  onRegister() {\n    this.startLoading();\n    const db = firestore;\n    const email = document.querySelector('#email-signup').value;\n    const password = document.querySelector('#password-signup').value;\n    const urlCode = document.querySelector('#urlCode-signup').value;\n\n    this.setState({\n      error: null\n    });\n\n    auth.createUserWithEmailAndPassword(email, password).then(cred => {\n      db.collection(\"users\").doc(email).set({\n        dataplicity: urlCode\n      });\n\n      // Needs to override error message when user signup successfully but could't connect to the pi.\n      axios.get(`${urlCode}/get_week`).then(response => {\n        console.log(\"signed up and connected to pi successfully\");\n        // this.closeModal();\n        this.onLoginSuccess(\"form\");\n        this.props.setData(email, response.data);\n      }).catch(error => {\n        console.log(error);\n        console.log(\"Sing up successfully, there was a problem with the connection to the pi\");\n        this.errorHandler();\n      });  \n\n    }, err => {\n      this.errorHandler();\n    });\n\n  }\n\n  onLoginSuccess(method, response) {\n\n    this.closeModal();\n    this.setState({\n      loggedIn: method,\n      loading: false\n    })\n  }\n\n  onLoginFail(method, response) {\n\n    this.setState({\n      loading: false,\n      error: response\n    })\n  }\n\n  startLoading() {\n    this.setState({\n      loading: true\n    });\n  }\n \n  finishLoading() {\n    this.setState({\n      loading: false\n    });\n  }\n \n  afterTabsChange() {\n    this.setState({\n      error: null\n    });\n  }\n\n  errorHandler() {\n    this.setState({\n      error: true\n    });\n    this.finishLoading();\n  }\n \n  render() {\n    return (\n      <div>\n        <React.Fragment>\n          <ReactModalLogin\n            visible={this.state.showModal}\n          //   onCloseModal={this.closeModal.bind(this)}\n            loading={this.state.loading}\n            initialTab={this.state.initialTab}\n            error={this.state.error}\n            tabs={{\n              afterChange: this.afterTabsChange.bind(this)\n            }}\n            loginError={{\n              // containerClass: \"error-message\",\n              label: \"Couldn't sign in, please try again\",\n            }}\n            registerError={{\n              // containerClass: \"error-message\",\n              label: \"Couldn't sign up, please try again\",\n            }}\n            startLoading={this.startLoading.bind(this)}\n            finishLoading={this.finishLoading.bind(this)}\n            closeBtn={{\n              containerClass: \"close-button\"\n            }}\n            form={{\n              loginInputs: [\n                  {\n                      // containerClass: \"popup-input-wrapper\",\n                      id: \"email-login\",\n                      type: \"email\",\n                      // inputClass: \"popup-input\",\n                      name: \"Email\",\n                      label: \"Email\"\n                  },\n                  {\n                      // containerClass: \"popup-input-wrapper\",\n                      id: \"password-login\",\n                      type: \"password\",\n                      // inputClass: \"popup-input\",\n                      name: \"Password\",\n                      label: \"Password\"\n                  }\n              ],\n              registerInputs: [\n                  {\n                      // containerClass: \"popup-input-wrapper\",\n                      id: \"email-signup\",\n                      type: \"email\",\n                      // inputClass: \"popup-input\",\n                      name: \"Email\",\n                      label: \"Email\"\n                  },\n                  {\n                      // containerClass: \"popup-input-wrapper\",\n                      id: \"password-signup\",\n                      type: \"password\",\n                      // inputClass: \"popup-input\",\n                      name: \"Password\",\n                      label: \"Password\"\n                  },\n                  {\n                      // containerClass: \"popup-input-wrapper\",\n                      id: \"urlCode-signup\",\n                      type: \"text\",\n                      // inputClass: \"popup-input\",\n                      name: \"URL Code\",\n                      label: \"URL Code\",\n                  }\n              ],\n\n              loginBtn: {\n                  label: \"Sign in\",\n              },\n              registerBtn: {\n                  label: \"Sign up\"\n              },\n              onLogin: this.onLogin.bind(this),\n              onRegister: this.onRegister.bind(this)\n            }}\n          />\n        </React.Fragment>\n      </div>\n    );\n  }\n}\n\nexport default Popup;"]},"metadata":{},"sourceType":"module"}