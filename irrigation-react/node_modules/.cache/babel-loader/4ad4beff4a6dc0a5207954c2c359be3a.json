{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/model/Popup.js\";\nimport React from \"react\";\nimport ReactModalLogin from \"react-modal-login\";\nimport './Popup.css';\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: true,\n      loading: false,\n      error: null\n    };\n  }\n\n  openModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      showModal: false,\n      error: null\n    });\n  }\n\n  onLogin(value) {\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n    console.log(email);\n    console.log(password);\n  }\n\n  startLoading() {\n    this.setState({\n      loading: true\n    });\n  }\n\n  finishLoading() {\n    this.setState({\n      loading: false\n    });\n  }\n\n  afterTabsChange() {\n    this.setState({\n      error: null\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReactModalLogin, {\n        visible: this.state.showModal //   onCloseModal={this.closeModal.bind(this)}\n        ,\n        loading: this.state.loading,\n        error: this.state.error,\n        tabs: {\n          afterChange: this.afterTabsChange.bind(this)\n        },\n        loginError: {\n          label: \"Couldn't sign in, please try again.\"\n        },\n        registerError: {\n          label: \"Couldn't sign up, please try again.\"\n        },\n        startLoading: this.startLoading.bind(this),\n        finishLoading: this.finishLoading.bind(this),\n        closeBtn: {\n          containerClass: \"close-button\"\n        },\n        form: {\n          loginInputs: [{\n            // containerClass: \"popup-input-wrapper\",\n            id: \"email-login\",\n            type: \"email\",\n            // inputClass: \"popup-input\",\n            name: \"Email\",\n            label: \"Email\"\n          }, {\n            // containerClass: \"popup-input-wrapper\",\n            id: \"password-login\",\n            type: \"password\",\n            // inputClass: \"popup-input\",\n            name: \"Password\",\n            label: \"Password\"\n          }],\n          registerInputs: [{\n            // containerClass: \"popup-input-wrapper\",\n            id: \"email-signup\",\n            type: \"email\",\n            // inputClass: \"popup-input\",\n            name: \"Email\",\n            label: \"Email\"\n          }, {\n            // containerClass: \"popup-input-wrapper\",\n            id: \"password-signup\",\n            type: \"password\",\n            // inputClass: \"popup-input\",\n            name: \"Password\",\n            label: \"Password\"\n          }, {\n            // containerClass: \"popup-input-wrapper\",\n            id: \"urlcode-signup\",\n            type: \"text\",\n            // inputClass: \"popup-input\",\n            name: \"URL Code\",\n            label: \"URL Code\"\n          }],\n          loginBtn: {\n            label: \"Sign in\"\n          },\n          registerBtn: {\n            label: \"Sign up\"\n          },\n          onLogin: this.onLogin.bind(this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Popup;","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/model/Popup.js"],"names":["React","ReactModalLogin","Popup","Component","constructor","props","state","showModal","loading","error","openModal","setState","closeModal","onLogin","value","email","document","querySelector","password","console","log","startLoading","finishLoading","afterTabsChange","render","afterChange","bind","label","containerClass","loginInputs","id","type","name","registerInputs","loginBtn","registerBtn"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactModalLogin from \"react-modal-login\";\n\nimport './Popup.css';\n\nclass Popup extends React.Component {\n  constructor(props) {\n    super(props);\n \n    this.state = {\n      showModal: true,\n      loading: false,\n      error: null\n    };\n  }\n \n  openModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n \n  closeModal() {\n    this.setState({\n      showModal: false,\n      error: null\n    });\n  }\n\n  onLogin(value) {\n    const email = document.querySelector('#email').value;\n    const password = document.querySelector('#password').value;\n    console.log(email);\n    console.log(password);\n  }\n \n  startLoading() {\n    this.setState({\n      loading: true\n    });\n  }\n \n  finishLoading() {\n    this.setState({\n      loading: false\n    });\n  }\n \n  afterTabsChange() {\n    this.setState({\n      error: null\n    });\n  }\n \n  render() {\n    return (\n      <div> \n        <ReactModalLogin\n          visible={this.state.showModal}\n        //   onCloseModal={this.closeModal.bind(this)}\n          loading={this.state.loading}\n          error={this.state.error}\n          tabs={{\n            afterChange: this.afterTabsChange.bind(this)\n          }}\n          loginError={{\n            label: \"Couldn't sign in, please try again.\"\n          }}\n          registerError={{\n            label: \"Couldn't sign up, please try again.\"\n          }}\n          startLoading={this.startLoading.bind(this)}\n          finishLoading={this.finishLoading.bind(this)}\n          closeBtn={{\n            containerClass: \"close-button\"\n          }}\n          form={{\n            loginInputs: [\n                {\n                    // containerClass: \"popup-input-wrapper\",\n                    id: \"email-login\",\n                    type: \"email\",\n                    // inputClass: \"popup-input\",\n                    name: \"Email\",\n                    label: \"Email\"\n                },\n                {\n                    // containerClass: \"popup-input-wrapper\",\n                    id: \"password-login\",\n                    type: \"password\",\n                    // inputClass: \"popup-input\",\n                    name: \"Password\",\n                    label: \"Password\"\n                }\n            ],\n            registerInputs: [\n                {\n                    // containerClass: \"popup-input-wrapper\",\n                    id: \"email-signup\",\n                    type: \"email\",\n                    // inputClass: \"popup-input\",\n                    name: \"Email\",\n                    label: \"Email\"\n                },\n                {\n                    // containerClass: \"popup-input-wrapper\",\n                    id: \"password-signup\",\n                    type: \"password\",\n                    // inputClass: \"popup-input\",\n                    name: \"Password\",\n                    label: \"Password\"\n                },\n                {\n                    // containerClass: \"popup-input-wrapper\",\n                    id: \"urlcode-signup\",\n                    type: \"text\",\n                    // inputClass: \"popup-input\",\n                    name: \"URL Code\",\n                    label: \"URL Code\"\n                }\n            ],\n\n            loginBtn: {\n                label: \"Sign in\"\n            },\n            registerBtn: {\n                label: \"Sign up\"\n            },\n            onLogin: this.onLogin.bind(this)\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Popup;"]},"metadata":{},"sourceType":"module"}