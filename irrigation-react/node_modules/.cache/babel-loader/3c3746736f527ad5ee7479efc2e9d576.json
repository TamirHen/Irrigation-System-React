{"ast":null,"code":"/* eslint-disable array-callback-return */\n\n/* eslint-disable no-useless-return */\n\n/* eslint-disable no-loop-func */\n\n/* eslint-disable consistent-return */\n\n/* eslint-disable no-plusplus */\n\n/* eslint-disable no-restricted-syntax */\nimport moment from 'moment';\n\nconst nextIrrigation = (weekData, roundsData) => {\n  if (!weekData || !roundsData) {\n    return 'Error';\n  }\n\n  const nextSevenDays = [];\n  const irrigationStartHours = Object.keys(roundsData).reduce((res, round) => {\n    if (round && round.isActive) return moment(roundsData[round].startTime, 'HH:mm:ss');\n  }, []);\n  const sortedStartHours = irrigationStartHours.sort((a, b) => a.valueOf() - b.valueOf());\n  console.log(irrigationStartHours);\n  console.log(sortedStartHours);\n  const minTime = sortedStartHours[0];\n  const now = moment(new Date(), 'HH:mm:ss');\n\n  for (let i = 0; i < 7; i++) {\n    nextSevenDays[i] = moment().add(i, 'days').format('dddd');\n\n    if (weekData[nextSevenDays[i].toLowerCase()]) {\n      if (minTime.isAfter(now)) {\n        return `${nextSevenDays[i]} ${minTime.format('HH:mm')}`;\n      }\n\n      if (i === 0) {\n        // its today\n        for (let j = 0; j < sortedStartHours.length; j++) {\n          if (sortedStartHours[j].isAfter(now)) {\n            return `${nextSevenDays[i]} ${sortedStartHours[j].format('HH:mm')}`;\n          }\n        }\n      }\n\n      return `${nextSevenDays[i]} ${minTime.format('HH:mm')}`;\n    }\n  }\n\n  return 'Not set';\n};\n\nexport default nextIrrigation;","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/utils/NextIrrigation.js"],"names":["moment","nextIrrigation","weekData","roundsData","nextSevenDays","irrigationStartHours","Object","keys","reduce","res","round","isActive","startTime","sortedStartHours","sort","a","b","valueOf","console","log","minTime","now","Date","i","add","format","toLowerCase","isAfter","j","length"],"mappings":"AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;AACA,OAAOA,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,UAAX,KAA0B;AAC/C,MAAI,CAACD,QAAD,IAAa,CAACC,UAAlB,EAA8B;AAC5B,WAAO,OAAP;AACD;;AACD,QAAMC,aAAa,GAAG,EAAtB;AACA,QAAMC,oBAAoB,GAAGC,MAAM,CAACC,IAAP,CAAYJ,UAAZ,EAAwBK,MAAxB,CAA+B,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC1E,QAAIA,KAAK,IAAIA,KAAK,CAACC,QAAnB,EACE,OAAOX,MAAM,CAACG,UAAU,CAACO,KAAD,CAAV,CAAkBE,SAAnB,EAA8B,UAA9B,CAAb;AACH,GAH4B,EAG1B,EAH0B,CAA7B;AAIA,QAAMC,gBAAgB,GAAGR,oBAAoB,CAACS,IAArB,CACvB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,OAAF,KAAcD,CAAC,CAACC,OAAF,EADD,CAAzB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYd,oBAAZ;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYN,gBAAZ;AACA,QAAMO,OAAO,GAAGP,gBAAgB,CAAC,CAAD,CAAhC;AACA,QAAMQ,GAAG,GAAGrB,MAAM,CAAC,IAAIsB,IAAJ,EAAD,EAAa,UAAb,CAAlB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BnB,IAAAA,aAAa,CAACmB,CAAD,CAAb,GAAmBvB,MAAM,GAAGwB,GAAT,CAAaD,CAAb,EAAgB,MAAhB,EAAwBE,MAAxB,CAA+B,MAA/B,CAAnB;;AACA,QAAIvB,QAAQ,CAACE,aAAa,CAACmB,CAAD,CAAb,CAAiBG,WAAjB,EAAD,CAAZ,EAA8C;AAC5C,UAAIN,OAAO,CAACO,OAAR,CAAgBN,GAAhB,CAAJ,EAA0B;AACxB,eAAQ,GAAEjB,aAAa,CAACmB,CAAD,CAAI,IAAGH,OAAO,CAACK,MAAR,CAAe,OAAf,CAAwB,EAAtD;AACD;;AAED,UAAIF,CAAC,KAAK,CAAV,EAAa;AACX;AACA,aAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,gBAAgB,CAACgB,MAArC,EAA6CD,CAAC,EAA9C,EAAkD;AAChD,cAAIf,gBAAgB,CAACe,CAAD,CAAhB,CAAoBD,OAApB,CAA4BN,GAA5B,CAAJ,EAAsC;AACpC,mBAAQ,GAAEjB,aAAa,CAACmB,CAAD,CAAI,IAAGV,gBAAgB,CAACe,CAAD,CAAhB,CAAoBH,MAApB,CAA2B,OAA3B,CAAoC,EAAlE;AACD;AACF;AACF;;AACD,aAAQ,GAAErB,aAAa,CAACmB,CAAD,CAAI,IAAGH,OAAO,CAACK,MAAR,CAAe,OAAf,CAAwB,EAAtD;AACD;AACF;;AACD,SAAO,SAAP;AACD,CApCD;;AAsCA,eAAexB,cAAf","sourcesContent":["/* eslint-disable array-callback-return */\n/* eslint-disable no-useless-return */\n/* eslint-disable no-loop-func */\n/* eslint-disable consistent-return */\n/* eslint-disable no-plusplus */\n/* eslint-disable no-restricted-syntax */\nimport moment from 'moment';\n\nconst nextIrrigation = (weekData, roundsData) => {\n  if (!weekData || !roundsData) {\n    return 'Error';\n  }\n  const nextSevenDays = [];\n  const irrigationStartHours = Object.keys(roundsData).reduce((res, round) => {\n    if (round && round.isActive)\n      return moment(roundsData[round].startTime, 'HH:mm:ss');\n  }, []);\n  const sortedStartHours = irrigationStartHours.sort(\n    (a, b) => a.valueOf() - b.valueOf(),\n  );\n  console.log(irrigationStartHours);\n  console.log(sortedStartHours);\n  const minTime = sortedStartHours[0];\n  const now = moment(new Date(), 'HH:mm:ss');\n\n  for (let i = 0; i < 7; i++) {\n    nextSevenDays[i] = moment().add(i, 'days').format('dddd');\n    if (weekData[nextSevenDays[i].toLowerCase()]) {\n      if (minTime.isAfter(now)) {\n        return `${nextSevenDays[i]} ${minTime.format('HH:mm')}`;\n      }\n\n      if (i === 0) {\n        // its today\n        for (let j = 0; j < sortedStartHours.length; j++) {\n          if (sortedStartHours[j].isAfter(now)) {\n            return `${nextSevenDays[i]} ${sortedStartHours[j].format('HH:mm')}`;\n          }\n        }\n      }\n      return `${nextSevenDays[i]} ${minTime.format('HH:mm')}`;\n    }\n  }\n  return 'Not set';\n};\n\nexport default nextIrrigation;\n"]},"metadata":{},"sourceType":"module"}