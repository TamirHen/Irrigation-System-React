{"ast":null,"code":"/* eslint-disable no-param-reassign */\n\n/* eslint-disable no-console */\n\n/* eslint-disable no-plusplus */\n\n/* eslint-disable no-restricted-syntax */\nimport moment from 'moment';\n\nconst nextIrrigation = (weekData, roundsData) => {\n  if (!weekData || !roundsData) {\n    return 'Error';\n  }\n\n  const nextSevenDays = [];\n  const irrigationStartHours = Object.keys(roundsData).map((key, value) => {\n    console.log(key);\n    console.log(value); // moment(round.startTime, 'HH:mm:ss');\n  });\n  console.log(irrigationStartHours); //   const minHour\n\n  for (let i = 0; i < 7; i++) {\n    nextSevenDays[i] = moment().add(i, 'days').format('dddd');\n    let nextIrrigationTime = moment(new Date(), 'HH:mm:ss');\n    let nextIrrigationRound;\n\n    if (weekData[nextSevenDays[i].toLowerCase()]) {\n      for (const [, round] of Object.entries(roundsData)) {\n        const startTimeMoment = moment(round.startTime, 'HH:mm:ss');\n\n        if (round.isActive && i === 0 && // i = 0 - today\n        startTimeMoment.isAfter(moment(new Date(), 'HH:mm:ss')) || round.isActive && i !== 0) {\n          if (startTimeMoment.isBefore(nextIrrigationTime)) {\n            nextIrrigationTime = startTimeMoment;\n            nextIrrigationRound = round;\n          }\n        }\n      }\n\n      if (nextIrrigationRound) {\n        const times = nextIrrigationRound.startTime.split(':');\n        return `${nextSevenDays[i]} ${times[0]}:${times[1]}`;\n      }\n    }\n  }\n\n  return 'Not set';\n};\n\nexport default nextIrrigation;","map":{"version":3,"sources":["/Users/tamirhen/Desktop/Irrigation-System-React/irrigation-react/src/utils/NextIrrigation.js"],"names":["moment","nextIrrigation","weekData","roundsData","nextSevenDays","irrigationStartHours","Object","keys","map","key","value","console","log","i","add","format","nextIrrigationTime","Date","nextIrrigationRound","toLowerCase","round","entries","startTimeMoment","startTime","isActive","isAfter","isBefore","times","split"],"mappings":"AAAA;;AACA;;AACA;;AACA;AACA,OAAOA,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAWC,UAAX,KAA0B;AAC/C,MAAI,CAACD,QAAD,IAAa,CAACC,UAAlB,EAA8B;AAC5B,WAAO,OAAP;AACD;;AACD,QAAMC,aAAa,GAAG,EAAtB;AACA,QAAMC,oBAAoB,GAAGC,MAAM,CAACC,IAAP,CAAYJ,UAAZ,EAAwBK,GAAxB,CAA4B,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACvEC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAFuE,CAGvE;AACD,GAJ4B,CAA7B;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,oBAAZ,EAV+C,CAW/C;;AAEA,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BT,IAAAA,aAAa,CAACS,CAAD,CAAb,GAAmBb,MAAM,GAAGc,GAAT,CAAaD,CAAb,EAAgB,MAAhB,EAAwBE,MAAxB,CAA+B,MAA/B,CAAnB;AACA,QAAIC,kBAAkB,GAAGhB,MAAM,CAAC,IAAIiB,IAAJ,EAAD,EAAa,UAAb,CAA/B;AACA,QAAIC,mBAAJ;;AACA,QAAIhB,QAAQ,CAACE,aAAa,CAACS,CAAD,CAAb,CAAiBM,WAAjB,EAAD,CAAZ,EAA8C;AAC5C,WAAK,MAAM,GAAGC,KAAH,CAAX,IAAwBd,MAAM,CAACe,OAAP,CAAelB,UAAf,CAAxB,EAAoD;AAClD,cAAMmB,eAAe,GAAGtB,MAAM,CAACoB,KAAK,CAACG,SAAP,EAAkB,UAAlB,CAA9B;;AACA,YACGH,KAAK,CAACI,QAAN,IACCX,CAAC,KAAK,CADP,IACY;AACXS,QAAAA,eAAe,CAACG,OAAhB,CAAwBzB,MAAM,CAAC,IAAIiB,IAAJ,EAAD,EAAa,UAAb,CAA9B,CAFF,IAGCG,KAAK,CAACI,QAAN,IAAkBX,CAAC,KAAK,CAJ3B,EAKE;AACA,cAAIS,eAAe,CAACI,QAAhB,CAAyBV,kBAAzB,CAAJ,EAAkD;AAChDA,YAAAA,kBAAkB,GAAGM,eAArB;AACAJ,YAAAA,mBAAmB,GAAGE,KAAtB;AACD;AACF;AACF;;AACD,UAAIF,mBAAJ,EAAyB;AACvB,cAAMS,KAAK,GAAGT,mBAAmB,CAACK,SAApB,CAA8BK,KAA9B,CAAoC,GAApC,CAAd;AACA,eAAQ,GAAExB,aAAa,CAACS,CAAD,CAAI,IAAGc,KAAK,CAAC,CAAD,CAAI,IAAGA,KAAK,CAAC,CAAD,CAAI,EAAnD;AACD;AACF;AACF;;AACD,SAAO,SAAP;AACD,CAvCD;;AAyCA,eAAe1B,cAAf","sourcesContent":["/* eslint-disable no-param-reassign */\n/* eslint-disable no-console */\n/* eslint-disable no-plusplus */\n/* eslint-disable no-restricted-syntax */\nimport moment from 'moment';\n\nconst nextIrrigation = (weekData, roundsData) => {\n  if (!weekData || !roundsData) {\n    return 'Error';\n  }\n  const nextSevenDays = [];\n  const irrigationStartHours = Object.keys(roundsData).map((key, value) => {\n    console.log(key);\n    console.log(value);\n    // moment(round.startTime, 'HH:mm:ss');\n  });\n  console.log(irrigationStartHours);\n  //   const minHour\n\n  for (let i = 0; i < 7; i++) {\n    nextSevenDays[i] = moment().add(i, 'days').format('dddd');\n    let nextIrrigationTime = moment(new Date(), 'HH:mm:ss');\n    let nextIrrigationRound;\n    if (weekData[nextSevenDays[i].toLowerCase()]) {\n      for (const [, round] of Object.entries(roundsData)) {\n        const startTimeMoment = moment(round.startTime, 'HH:mm:ss');\n        if (\n          (round.isActive &&\n            i === 0 && // i = 0 - today\n            startTimeMoment.isAfter(moment(new Date(), 'HH:mm:ss'))) ||\n          (round.isActive && i !== 0)\n        ) {\n          if (startTimeMoment.isBefore(nextIrrigationTime)) {\n            nextIrrigationTime = startTimeMoment;\n            nextIrrigationRound = round;\n          }\n        }\n      }\n      if (nextIrrigationRound) {\n        const times = nextIrrigationRound.startTime.split(':');\n        return `${nextSevenDays[i]} ${times[0]}:${times[1]}`;\n      }\n    }\n  }\n  return 'Not set';\n};\n\nexport default nextIrrigation;\n"]},"metadata":{},"sourceType":"module"}